@charset "UTF-8";
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section {
  display: block; }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
pre,
samp {
  font-size: 1em; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

audio,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button::-moz-focusring,
[type='button']::-moz-focusring,
[type='reset']::-moz-focusring,
[type='submit']::-moz-focusring {
  outline: 1px dotted ButtonText; }

[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0; }

[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

template,
[hidden] {
  display: none; }

abbr,
blockquote,
code,
kbd,
q,
samp,
tt,
var {
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none; }

blockquote,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
li,
ol,
p {
  margin: 0;
  padding: 0; }

.layout--content::after, .sidebar-second .layout--content::after, .layout--sidebar-second::after {
  clear: both;
  content: '';
  display: table; }

.l-main a {
  -webkit-transition: all .3s;
  transition: all .3s; }

html {
  font-size: 100%;
  line-height: 1.5; }

html {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

body {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif;
  color: #111111;
  margin: 0; }

body.adminimal-admin-toolbar {
  margin-top: 39px; }

a img {
  border: 0px; }

.more-link {
  margin-top: 0.35rem;
  text-transform: uppercase;
  font-size: .8rem;
  letter-spacing: 2px; }
  .more-link a {
    padding-right: 0.7rem;
    display: inline-block;
    color: #00457c;
    font-weight: bold; }
    .more-link a:after {
      content: ' ';
      width: 10px;
      height: 10px;
      display: inline-block;
      background-image: url(../images/arrows/icons__arrowâ€”link.svg);
      background-repeat: no-repeat;
      background-size: 10px 10px;
      margin-left: .25rem; }

.l-main a {
  text-decoration: none;
  color: #00457c;
  border-bottom: 1px dotted #00457c;
  border-bottom: 1px solid transparent; }
  .l-main a:hover {
    border-bottom: 1px solid #00457c; }

.contextual-links a {
  border-bottom-color: transparent !important; }
  .contextual-links a:hover {
    border-bottom-color: transparent !important; }

img {
  display: block;
  height: auto;
  max-width: 100%; }

hr {
  display: block;
  margin-top: .5rem;
  margin-bottom: .5rem;
  margin-left: auto;
  margin-right: auto;
  border-style: inset;
  border-width: 1px;
  border-color: #00457c; }

b,
strong {
  font-weight: 500; }

.marker {
  font-weight: 500; }

li {
  list-style-position: inside; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1.4rem;
  margin-bottom: 0.35rem; }

p + p {
  margin-top: 1.05rem; }

h2 + p,
h3 + p,
h4 + p,
h5 + p,
h6 + p {
  margin-top: 0; }

.h1,
h1 {
  font-size: 1.66667rem;
  line-height: 1.3;
  color: #00457c; }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.8rem; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.8rem; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.06667rem; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }

.h2,
h2 {
  font-size: 1.46667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.6rem; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.6rem; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.66667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.66667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.8rem; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }

.h3,
h3 {
  font-size: 1.26667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.4rem; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.4rem; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.46667rem;
      line-height: 1.4; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.46667rem;
      line-height: 1.4; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.6rem; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.66667rem;
      line-height: 1.5; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.66667rem;
      line-height: 1.5; } }

.h4,
h4 {
  font-size: 1.13333rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.2rem; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.2rem; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.4rem; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }

.h5,
h5 {
  font-size: 1rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.06667rem; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.06667rem; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.2rem; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }

.h6,
h6 {
  font-size: 0.86667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 0.93333rem; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 0.93333rem; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.06667rem; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

#block-opin-base-branding img {
  width: 150px; }

.file--general,
.file--application-octet-stream {
  background-image: url(../images/icons/file-exe.svg); }

.file--package-x-generic {
  background-image: url(../images/icons/file-generic.svg); }

.file--x-office-spreadsheet {
  background-image: url(../images/icons/file-xls.svg); }

.file--x-office-document {
  background-image: url(../images/icons/file-doc.svg); }

.file--x-office-presentation {
  background-image: url(../images/icons/file-ppt.svg); }

.file--text-x-script {
  background-image: url(../images/icons/file-js.svg); }

.file--text-html {
  background-image: url(../images/icons/file-html.svg); }

.file--text-plain {
  background-image: url(../images/icons/text-plain.png); }

.file--application-pdf {
  background-image: url(../images/icons/file-pdf.svg); }

.file--application-x-executable {
  background-image: url(../images/icons/file-exe.svg); }

.file--audio {
  background-image: url(../images/icons/file-mp3.svg); }

.file--video {
  background-image: url(../images/icons/file-mp4.svg); }

.file--text {
  background-image: url(../images/icons/file-txt.svg); }

.file--image {
  background-image: url(../images/icons/file-jpg.svg); }

.file--mime-application-postscript {
  background-image: url(../images/icons/file-eps.svg); }

.file {
  background-size: 16px auto;
  background-position: left top; }

a[data-entity-type="file"] {
  position: relative;
  margin-left: 1rem;
  font-weight: 500;
  border-bottom: 1px dotted; }
  a[data-entity-type="file"]:before {
    position: absolute;
    content: ' ';
    width: .75rem;
    height: 1rem;
    left: -.9rem;
    top: .12rem;
    background-image: url(../images/icons/attach-2.svg);
    background-repeat: no-repeat;
    background-size: 1rem 1rem; }

.messages {
  margin-bottom: 1.4rem;
  background-color: #ecf6fa;
  color: #424242;
  overflow: hidden;
  padding: 20px;
  position: relative;
  word-wrap: break-word;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important;
  background-repeat: no-repeat;
  background-size: 55px 55px;
  background-position: 101.2%  -5px; }
  .messages a {
    color: #bcdeee;
    font-weight: 600;
    text-decoration: none;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.messages__content > *:last-child {
  margin-bottom: 0; }

.messages--error {
  background-color: #ffe6e5;
  border-color: #ffc5c2; }
  .messages--error a {
    color: #ff645c; }
  .messages--error .messages__item em:first-child {
    font-style: normal;
    font-weight: bold; }

.messages--status {
  background-color: #eff8e6;
  border-color: #c9e8a9; }
  .messages--status a {
    color: #71b02f;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.messages--warning {
  background-color: #fcf8e3;
  border-color: #faf2cc; }
  .messages--warning a {
    color: #8a6d3b;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.field--name-user-picture img {
  border-radius: 50%; }

h2.styleguide {
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #00457c;
  font-weight: 700;
  font-size: 1.2rem;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.contextual-links-wrapper a.contextual-links-trigger {
  border-bottom: 1px solid transparent; }

.contextual-links-wrapper ul.contextual-links li a {
  border-bottom: 1px solid transparent; }

.skiplinks {
  left: 50%;
  margin-left: -7em;
  position: absolute;
  width: 14em;
  z-index: 9999; }

.skiplinks__link,
.skiplinks__link:visited,
.skiplinks__link:focus {
  background-color: #333;
  border: 2px solid #eee;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top: 0;
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
  color: #eee;
  display: inline-block;
  font-weight: bold;
  line-height: 1.5;
  margin: 0;
  outline: 0;
  padding: 0.25em 0.5em;
  text-align: center;
  text-decoration: none;
  width: 14em; }

#main:focus {
  outline: 0; }

.visually-hidden {
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  width: 1px !important;
  word-wrap: normal !important; }

.focusable:active, .focusable:focus {
  clip: auto !important;
  height: auto !important;
  overflow: visible !important;
  position: static !important;
  width: auto !important; }

.hidden {
  display: none !important; }

.invisible {
  visibility: hidden !important; }

::-moz-selection {
  background: #00457c;
  color: white; }

::selection {
  background: #00457c;
  color: white; }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

.l-main {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto; }
  .l-main:after {
    content: " ";
    display: block;
    clear: both; }

.layout--main {
  margin-top: 2rem;
  margin-bottom: 4rem;
  padding-left: .5rem;
  padding-right: .5rem;
  clear: both; }

.layout--content {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  .sidebar-second .layout--content {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
    @media all and (min-width: 48em) {
      .sidebar-second .layout--content {
        width: 65.71429%;
        float: left;
        margin-left: 0; } }

.layout--sidebar-second {
  padding-top: 1.4rem; }
  @media all and (min-width: 48em) {
    .layout--sidebar-second {
      padding-top: 0;
      margin-top: 5rem; } }
  .sidebar-second .layout--sidebar-second {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
    @media all and (min-width: 48em) {
      .sidebar-second .layout--sidebar-second {
        width: 31.42857%;
        float: right;
        margin-left: 2.85714%; } }

.callout + .block {
  padding-top: 2.8rem; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section {
  display: block; }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
pre,
samp {
  font-size: 1em; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

audio,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button::-moz-focusring,
[type='button']::-moz-focusring,
[type='reset']::-moz-focusring,
[type='submit']::-moz-focusring {
  outline: 1px dotted ButtonText; }

[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0; }

[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

template,
[hidden] {
  display: none; }

abbr,
blockquote,
code,
kbd,
q,
samp,
tt,
var {
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none; }

blockquote,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
li,
ol,
p {
  margin: 0;
  padding: 0; }

.layout--content::after, .sidebar-second .layout--content::after, .layout--sidebar-second::after {
  clear: both;
  content: '';
  display: table; }

.l-main a {
  -webkit-transition: all .3s;
  transition: all .3s; }

html {
  font-size: 93.75%;
  line-height: 1.4; }
  @media all and (min-width: 768px) {
    html {
      font-size: 100%; } }
  @media all and (min-width: 960px) {
    html {
      font-size: 100%; } }
  @media all and (min-width: 1024px) {
    html {
      font-size: 106.25%; } }
  @media all and (min-width: 1200px) {
    html {
      font-size: 106.25%; } }
  @media all and (min-width: 1400px) {
    html {
      font-size: 106.25%; } }
  @media all and (min-width: 1700px) {
    html {
      font-size: 106.25%; } }

html {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

body {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif;
  color: #111111;
  margin: 0; }

body.adminimal-admin-toolbar {
  margin-top: 39px; }

a img {
  border: 0px; }

.more-link {
  margin-top: 0.35rem;
  text-transform: uppercase;
  font-size: .8rem;
  letter-spacing: 2px; }
  .more-link a {
    padding-right: 0.7rem;
    display: inline-block;
    color: #00457c;
    font-weight: bold; }
    .more-link a:after {
      content: ' ';
      width: 10px;
      height: 10px;
      display: inline-block;
      background-image: url(../images/arrows/icons__arrowâ€”link.svg);
      background-repeat: no-repeat;
      background-size: 10px 10px;
      margin-left: .25rem; }

.l-main a {
  text-decoration: none;
  color: #00457c;
  border-bottom: 1px dotted #00457c;
  border-bottom: 1px solid transparent; }
  .l-main a:hover {
    border-bottom: 1px solid #00457c; }

.contextual-links a {
  border-bottom-color: transparent !important; }
  .contextual-links a:hover {
    border-bottom-color: transparent !important; }

img {
  display: block;
  height: auto;
  max-width: 100%; }

hr {
  display: block;
  margin-top: .5rem;
  margin-bottom: .5rem;
  margin-left: auto;
  margin-right: auto;
  border-style: inset;
  border-width: 1px;
  border-color: #00457c; }

b,
strong {
  font-weight: 500; }

.marker {
  font-weight: 500; }

li {
  list-style-position: inside; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1.4rem;
  margin-bottom: 0.35rem; }

p + p {
  margin-top: 1.05rem; }

h2 + p,
h3 + p,
h4 + p,
h5 + p,
h6 + p {
  margin-top: 0; }

.h1,
h1 {
  font-size: 1.66667rem;
  line-height: 1.3;
  color: #00457c; }
  @media all and (min-width: 320px) {
    .h1,
    h1 {
      font-size: 1.8rem; } }
  @media all and (min-width: 568px) {
    .h1,
    h1 {
      font-size: 1.8rem; } }
  @media all and (min-width: 768px) {
    .h1,
    h1 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: 960px) {
    .h1,
    h1 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: 1024px) {
    .h1,
    h1 {
      font-size: 2.06667rem; } }
  @media all and (min-width: 1200px) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }
  @media all and (min-width: 1400px) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }
  @media all and (min-width: 1700px) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }

.h2,
h2 {
  font-size: 1.46667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: 320px) {
    .h2,
    h2 {
      font-size: 1.6rem; } }
  @media all and (min-width: 568px) {
    .h2,
    h2 {
      font-size: 1.6rem; } }
  @media all and (min-width: 768px) {
    .h2,
    h2 {
      font-size: 1.66667rem;
      line-height: 1.2; } }
  @media all and (min-width: 960px) {
    .h2,
    h2 {
      font-size: 1.66667rem;
      line-height: 1.2; } }
  @media all and (min-width: 1024px) {
    .h2,
    h2 {
      font-size: 1.8rem; } }
  @media all and (min-width: 1200px) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: 1400px) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: 1700px) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }

.h3,
h3 {
  font-size: 1.26667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: 320px) {
    .h3,
    h3 {
      font-size: 1.4rem; } }
  @media all and (min-width: 568px) {
    .h3,
    h3 {
      font-size: 1.4rem; } }
  @media all and (min-width: 768px) {
    .h3,
    h3 {
      font-size: 1.46667rem;
      line-height: 1.4; } }
  @media all and (min-width: 960px) {
    .h3,
    h3 {
      font-size: 1.46667rem;
      line-height: 1.4; } }
  @media all and (min-width: 1024px) {
    .h3,
    h3 {
      font-size: 1.6rem; } }
  @media all and (min-width: 1400px) {
    .h3,
    h3 {
      font-size: 1.66667rem;
      line-height: 1.5; } }
  @media all and (min-width: 1700px) {
    .h3,
    h3 {
      font-size: 1.66667rem;
      line-height: 1.5; } }

.h4,
h4 {
  font-size: 1.13333rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: 320px) {
    .h4,
    h4 {
      font-size: 1.2rem; } }
  @media all and (min-width: 568px) {
    .h4,
    h4 {
      font-size: 1.2rem; } }
  @media all and (min-width: 768px) {
    .h4,
    h4 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: 960px) {
    .h4,
    h4 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: 1024px) {
    .h4,
    h4 {
      font-size: 1.4rem; } }
  @media all and (min-width: 1200px) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }
  @media all and (min-width: 1400px) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }
  @media all and (min-width: 1700px) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }

.h5,
h5 {
  font-size: 1rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: 320px) {
    .h5,
    h5 {
      font-size: 1.06667rem; } }
  @media all and (min-width: 568px) {
    .h5,
    h5 {
      font-size: 1.06667rem; } }
  @media all and (min-width: 768px) {
    .h5,
    h5 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: 960px) {
    .h5,
    h5 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: 1024px) {
    .h5,
    h5 {
      font-size: 1.2rem; } }
  @media all and (min-width: 1200px) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: 1400px) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: 1700px) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }

.h6,
h6 {
  font-size: 0.86667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: 320px) {
    .h6,
    h6 {
      font-size: 0.93333rem; } }
  @media all and (min-width: 568px) {
    .h6,
    h6 {
      font-size: 0.93333rem; } }
  @media all and (min-width: 768px) {
    .h6,
    h6 {
      font-size: 1rem;
      line-height: 1.2; } }
  @media all and (min-width: 960px) {
    .h6,
    h6 {
      font-size: 1rem;
      line-height: 1.2; } }
  @media all and (min-width: 1024px) {
    .h6,
    h6 {
      font-size: 1.06667rem; } }
  @media all and (min-width: 1200px) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: 1400px) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: 1700px) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

#block-opin-base-branding img {
  width: 150px; }

.file--general,
.file--application-octet-stream {
  background-image: url(../images/icons/file-exe.svg); }

.file--package-x-generic {
  background-image: url(../images/icons/file-generic.svg); }

.file--x-office-spreadsheet {
  background-image: url(../images/icons/file-xls.svg); }

.file--x-office-document {
  background-image: url(../images/icons/file-doc.svg); }

.file--x-office-presentation {
  background-image: url(../images/icons/file-ppt.svg); }

.file--text-x-script {
  background-image: url(../images/icons/file-js.svg); }

.file--text-html {
  background-image: url(../images/icons/file-html.svg); }

.file--text-plain {
  background-image: url(../images/icons/text-plain.png); }

.file--application-pdf {
  background-image: url(../images/icons/file-pdf.svg); }

.file--application-x-executable {
  background-image: url(../images/icons/file-exe.svg); }

.file--audio {
  background-image: url(../images/icons/file-mp3.svg); }

.file--video {
  background-image: url(../images/icons/file-mp4.svg); }

.file--text {
  background-image: url(../images/icons/file-txt.svg); }

.file--image {
  background-image: url(../images/icons/file-jpg.svg); }

.file--mime-application-postscript {
  background-image: url(../images/icons/file-eps.svg); }

.file {
  background-size: 16px auto;
  background-position: left top; }

a[data-entity-type="file"] {
  position: relative;
  margin-left: 1rem;
  font-weight: 500;
  border-bottom: 1px dotted; }
  a[data-entity-type="file"]:before {
    position: absolute;
    content: ' ';
    width: .75rem;
    height: 1rem;
    left: -.9rem;
    top: .12rem;
    background-image: url(../images/icons/attach-2.svg);
    background-repeat: no-repeat;
    background-size: 1rem 1rem; }

.messages {
  margin-bottom: 1.4rem;
  background-color: #ecf6fa;
  color: #424242;
  overflow: hidden;
  padding: 20px;
  position: relative;
  word-wrap: break-word;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important;
  background-repeat: no-repeat;
  background-size: 55px 55px;
  background-position: 101.2%  -5px; }
  .messages a {
    color: #bcdeee;
    font-weight: 600;
    text-decoration: none;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.messages__content > *:last-child {
  margin-bottom: 0; }

.messages--error {
  background-color: #ffe6e5;
  border-color: #ffc5c2; }
  .messages--error a {
    color: #ff645c; }
  .messages--error .messages__item em:first-child {
    font-style: normal;
    font-weight: bold; }

.messages--status {
  background-color: #eff8e6;
  border-color: #c9e8a9; }
  .messages--status a {
    color: #71b02f;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.messages--warning {
  background-color: #fcf8e3;
  border-color: #faf2cc; }
  .messages--warning a {
    color: #8a6d3b;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.field--name-user-picture img {
  border-radius: 50%; }

h2.styleguide {
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #00457c;
  font-weight: 700;
  font-size: 1.2rem;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.contextual-links-wrapper a.contextual-links-trigger {
  border-bottom: 1px solid transparent; }

.contextual-links-wrapper ul.contextual-links li a {
  border-bottom: 1px solid transparent; }

.skiplinks {
  left: 50%;
  margin-left: -7em;
  position: absolute;
  width: 14em;
  z-index: 9999; }

.skiplinks__link,
.skiplinks__link:visited,
.skiplinks__link:focus {
  background-color: #333;
  border: 2px solid #eee;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top: 0;
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
  color: #eee;
  display: inline-block;
  font-weight: bold;
  line-height: 1.5;
  margin: 0;
  outline: 0;
  padding: 0.25em 0.5em;
  text-align: center;
  text-decoration: none;
  width: 14em; }

#main:focus {
  outline: 0; }

.visually-hidden {
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  width: 1px !important;
  word-wrap: normal !important; }

.focusable:active, .focusable:focus {
  clip: auto !important;
  height: auto !important;
  overflow: visible !important;
  position: static !important;
  width: auto !important; }

.hidden {
  display: none !important; }

.invisible {
  visibility: hidden !important; }

::-moz-selection {
  background: #00457c;
  color: white; }

::selection {
  background: #00457c;
  color: white; }

div[data-oembed-url*="instagram"] {
  text-align: center; }
  div[data-oembed-url*="instagram"] iframe {
    display: inline-block !important; }

.socialembed__container,
.videoembed__wrapper {
  padding-top: 1.4rem;
  padding-bottom: 1.4rem;
  text-align: center; }
  .socialembed__container .twitter-tweet,
  .socialembed__container iframe,
  .videoembed__wrapper .twitter-tweet,
  .videoembed__wrapper iframe {
    display: inline-block !important; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
