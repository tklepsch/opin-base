article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section {
  display: block; }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
pre,
samp {
  font-size: 1em; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

audio,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button::-moz-focusring,
[type='button']::-moz-focusring,
[type='reset']::-moz-focusring,
[type='submit']::-moz-focusring {
  outline: 1px dotted ButtonText; }

[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0; }

[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

template,
[hidden] {
  display: none; }

abbr,
blockquote,
code,
kbd,
q,
samp,
tt,
var {
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none; }

blockquote,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
li,
ol,
p {
  margin: 0;
  padding: 0; }

html {
  font-size: 100%;
  line-height: 1.5; }

html {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

body {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif;
  color: #111111;
  margin: 0; }

.layout__main a {
  text-decoration: none;
  color: #00457c;
  border-bottom: 1px dotted #00457c;
  border-bottom: 1px solid transparent; }
  .layout__main a:hover {
    border-bottom: 1px solid #00457c; }

hr {
  display: block;
  margin-top: .5rem;
  margin-bottom: .5rem;
  margin-left: auto;
  margin-right: auto;
  border-style: inset;
  border-width: 1px;
  border-color: #00457c; }

b,
strong {
  font-weight: 500; }

li {
  list-style-position: inside; }

p + p {
  margin-top: 1.05rem; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1.4rem;
  margin-bottom: 0.35rem; }

.h1,
h1 {
  font-size: 1.66667rem;
  line-height: 1.3;
  color: #00457c; }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.8rem; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.8rem; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.06667rem; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h1,
    h1 {
      font-size: 2.2rem;
      line-height: 1.2; } }

.h2,
h2 {
  font-size: 1.46667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.6rem; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.6rem; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.66667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.66667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.8rem; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h2,
    h2 {
      font-size: 1.93333rem;
      line-height: 1.2; } }

.h3,
h3 {
  font-size: 1.26667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.4rem; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.4rem; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.46667rem;
      line-height: 1.4; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.46667rem;
      line-height: 1.4; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.6rem; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.66667rem;
      line-height: 1.5; } }
  @media all and (min-width: ) {
    .h3,
    h3 {
      font-size: 1.66667rem;
      line-height: 1.5; } }

.h4,
h4 {
  font-size: 1.13333rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.2rem; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.2rem; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.4rem; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h4,
    h4 {
      font-size: 1.46667rem;
      line-height: 1.2; } }

.h5,
h5 {
  font-size: 1rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.06667rem; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.06667rem; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.2rem; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h5,
    h5 {
      font-size: 1.26667rem;
      line-height: 1.2; } }

.h6,
h6 {
  font-size: 0.86667rem;
  line-height: 1.3;
  font-weight: 500; }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 0.93333rem; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 0.93333rem; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.06667rem; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }
  @media all and (min-width: ) {
    .h6,
    h6 {
      font-size: 1.13333rem;
      line-height: 1.2; } }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

body.adminimal-admin-toolbar {
  margin-top: 39px; }

#block-opin-base-branding img {
  width: 150px; }

.file--general,
.file--application-octet-stream {
  background-image: url(../images/icons/file-exe.svg); }

.file--package-x-generic {
  background-image: url(../images/icons/file-generic.svg); }

.file--x-office-spreadsheet {
  background-image: url(../images/icons/file-xls.svg); }

.file--x-office-document {
  background-image: url(../images/icons/file-doc.svg); }

.file--x-office-presentation {
  background-image: url(../images/icons/file-ppt.svg); }

.file--text-x-script {
  background-image: url(../images/icons/file-js.svg); }

.file--text-html {
  background-image: url(../images/icons/file-html.svg); }

.file--text-plain {
  background-image: url(../images/icons/text-plain.png); }

.file--application-pdf {
  background-image: url(../images/icons/file-pdf.svg); }

.file--application-x-executable {
  background-image: url(../images/icons/file-exe.svg); }

.file--audio {
  background-image: url(../images/icons/file-mp3.svg); }

.file--video {
  background-image: url(../images/icons/file-mp4.svg); }

.file--text {
  background-image: url(../images/icons/file-txt.svg); }

.file--image {
  background-image: url(../images/icons/file-jpg.svg); }

.file--mime-application-postscript {
  background-image: url(../images/icons/file-eps.svg); }

.file {
  background-size: 16px auto;
  background-position: left top; }

a[data-entity-type="file"] {
  position: relative;
  margin-left: 1rem;
  font-weight: 500;
  border-bottom: 1px dotted; }
  a[data-entity-type="file"]:before {
    position: absolute;
    content: ' ';
    width: .75rem;
    height: 1rem;
    left: -.9rem;
    top: .12rem;
    background-image: url(../images/icons/attach-2.svg);
    background-repeat: no-repeat;
    background-size: 1rem 1rem; }

.contextual-links {
  width: 100%; }
  .contextual-links a {
    border-bottom-color: transparent !important; }
    .contextual-links a:hover {
      border-bottom-color: transparent !important; }

.contextual-links-wrapper a.contextual-links-trigger {
  border-bottom: 1px solid transparent; }

.contextual-links-wrapper ul.contextual-links li a {
  border-bottom: 1px solid transparent; }

.messages {
  margin-bottom: 1.4rem;
  background-color: #ecf6fa;
  color: #424242;
  overflow: hidden;
  padding: 20px;
  position: relative;
  word-wrap: break-word;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important;
  background-repeat: no-repeat;
  background-size: 55px 55px;
  background-position: 101.2%  -5px; }
  .messages a {
    color: #bcdeee;
    font-weight: 600;
    text-decoration: none;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.messages__content > *:last-child {
  margin-bottom: 0; }

.messages--error {
  background-color: #ffe6e5;
  border-color: #ffc5c2; }
  .messages--error a {
    color: #ff645c; }
  .messages--error .messages__item em:first-child {
    font-style: normal;
    font-weight: bold; }

.messages--status {
  background-color: #eff8e6;
  border-color: #c9e8a9; }
  .messages--status a {
    color: #71b02f;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.messages--warning {
  background-color: #fcf8e3;
  border-color: #faf2cc; }
  .messages--warning a {
    color: #8a6d3b;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important; }

.more-link {
  margin-top: 0.35rem;
  text-transform: uppercase;
  font-size: .8rem;
  letter-spacing: 2px; }
  .more-link a {
    padding-right: 0.7rem;
    display: inline-block;
    color: #00457c;
    font-weight: bold; }

.skiplinks {
  left: 50%;
  margin-left: -7em;
  position: absolute;
  width: 14em;
  z-index: 9999; }

.skiplinks__link,
.skiplinks__link:visited,
.skiplinks__link:focus {
  background-color: #333;
  border: 2px solid #eee;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top: 0;
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
  color: #eee;
  display: inline-block;
  font-weight: bold;
  line-height: 1.5;
  margin: 0;
  outline: 0;
  padding: 0.25em 0.5em;
  text-align: center;
  text-decoration: none;
  width: 14em; }

#main:focus {
  outline: 0; }

.visually-hidden {
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  width: 1px !important;
  word-wrap: normal !important; }

.focusable:active, .focusable:focus {
  clip: auto !important;
  height: auto !important;
  overflow: visible !important;
  position: static !important;
  width: auto !important; }

.hidden {
  display: none !important; }

.invisible {
  visibility: hidden !important; }

::-moz-selection {
  background: #00457c;
  color: white; }

::selection {
  background: #00457c;
  color: white; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
