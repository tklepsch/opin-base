article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section {
  display: block; }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
pre,
samp {
  font-size: 1em; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

audio,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button::-moz-focusring,
[type='button']::-moz-focusring,
[type='reset']::-moz-focusring,
[type='submit']::-moz-focusring {
  outline: 1px dotted ButtonText; }

[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0; }

[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

template,
[hidden] {
  display: none; }

abbr,
blockquote,
code,
kbd,
q,
samp,
tt,
var {
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none; }

blockquote,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
li,
ol,
p {
  margin: 0;
  padding: 0; }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

body.adminimal-admin-toolbar {
  margin-top: 39px; }

html {
  font-size: 100%;
  line-height: 1.5; }

html,
body {
  height: 100%; }

html {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

body {
  font-family: "Roboto Condensed", Helvetica Neue, Helvetica, arial, sans-serif;
  color: #000000;
  margin: 0; }

a {
  color: #000000;
  font-weight: bold; }

a:hover, a:focus {
  color: #CF0031; }

ul,
ol {
  padding: 0 2rem; }

.l-main li {
  margin-bottom: 1rem; }

hr {
  display: block;
  border-color: #000000; }

b,
strong {
  font-weight: 600; }

p + p {
  margin-top: 1.05rem; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1.4rem;
  margin-bottom: 0.35rem; }

.h1,
h1 {
  font-size: 1.66667rem;
  line-height: 1.3;
  color: #036091; }

@media all and (min-width: 320px) {
  .h1,
  h1 {
    font-size: 1.8rem; } }

@media all and (min-width: 568px) {
  .h1,
  h1 {
    font-size: 1.8rem; } }

@media all and (min-width: 768px) {
  .h1,
  h1 {
    font-size: 1.93333rem;
    line-height: 1.2; } }

@media all and (min-width: 960px) {
  .h1,
  h1 {
    font-size: 1.93333rem;
    line-height: 1.2; } }

@media all and (min-width: 1024px) {
  .h1,
  h1 {
    font-size: 2.06667rem; } }

@media all and (min-width: 1200px) {
  .h1,
  h1 {
    font-size: 2.2rem;
    line-height: 1.2; } }

@media all and (min-width: 1400px) {
  .h1,
  h1 {
    font-size: 2.2rem;
    line-height: 1.2; } }

@media all and (min-width: 1700px) {
  .h1,
  h1 {
    font-size: 2.2rem;
    line-height: 1.2; } }

.h2,
h2 {
  font-size: 1.46667rem;
  line-height: 1.3;
  font-weight: 500; }

@media all and (min-width: 320px) {
  .h2,
  h2 {
    font-size: 1.6rem; } }

@media all and (min-width: 568px) {
  .h2,
  h2 {
    font-size: 1.6rem; } }

@media all and (min-width: 768px) {
  .h2,
  h2 {
    font-size: 1.66667rem;
    line-height: 1.2; } }

@media all and (min-width: 960px) {
  .h2,
  h2 {
    font-size: 1.66667rem;
    line-height: 1.2; } }

@media all and (min-width: 1024px) {
  .h2,
  h2 {
    font-size: 1.8rem; } }

@media all and (min-width: 1200px) {
  .h2,
  h2 {
    font-size: 1.93333rem;
    line-height: 1.2; } }

@media all and (min-width: 1400px) {
  .h2,
  h2 {
    font-size: 1.93333rem;
    line-height: 1.2; } }

@media all and (min-width: 1700px) {
  .h2,
  h2 {
    font-size: 1.93333rem;
    line-height: 1.2; } }

.h3,
h3 {
  font-size: 1.26667rem;
  line-height: 1.3;
  font-weight: 500; }

@media all and (min-width: 320px) {
  .h3,
  h3 {
    font-size: 1.4rem; } }

@media all and (min-width: 568px) {
  .h3,
  h3 {
    font-size: 1.4rem; } }

@media all and (min-width: 768px) {
  .h3,
  h3 {
    font-size: 1.46667rem;
    line-height: 1.4; } }

@media all and (min-width: 960px) {
  .h3,
  h3 {
    font-size: 1.46667rem;
    line-height: 1.4; } }

@media all and (min-width: 1024px) {
  .h3,
  h3 {
    font-size: 1.6rem; } }

@media all and (min-width: 1400px) {
  .h3,
  h3 {
    font-size: 1.66667rem;
    line-height: 1.5; } }

@media all and (min-width: 1700px) {
  .h3,
  h3 {
    font-size: 1.66667rem;
    line-height: 1.5; } }

.h4,
h4 {
  font-size: 1.13333rem;
  line-height: 1.3;
  font-weight: 500; }

@media all and (min-width: 320px) {
  .h4,
  h4 {
    font-size: 1.2rem; } }

@media all and (min-width: 568px) {
  .h4,
  h4 {
    font-size: 1.2rem; } }

@media all and (min-width: 768px) {
  .h4,
  h4 {
    font-size: 1.26667rem;
    line-height: 1.2; } }

@media all and (min-width: 960px) {
  .h4,
  h4 {
    font-size: 1.26667rem;
    line-height: 1.2; } }

@media all and (min-width: 1024px) {
  .h4,
  h4 {
    font-size: 1.4rem; } }

@media all and (min-width: 1200px) {
  .h4,
  h4 {
    font-size: 1.46667rem;
    line-height: 1.2; } }

@media all and (min-width: 1400px) {
  .h4,
  h4 {
    font-size: 1.46667rem;
    line-height: 1.2; } }

@media all and (min-width: 1700px) {
  .h4,
  h4 {
    font-size: 1.46667rem;
    line-height: 1.2; } }

.h5,
h5 {
  font-size: 1rem;
  line-height: 1.3;
  font-weight: 500; }

@media all and (min-width: 320px) {
  .h5,
  h5 {
    font-size: 1.06667rem; } }

@media all and (min-width: 568px) {
  .h5,
  h5 {
    font-size: 1.06667rem; } }

@media all and (min-width: 768px) {
  .h5,
  h5 {
    font-size: 1.13333rem;
    line-height: 1.2; } }

@media all and (min-width: 960px) {
  .h5,
  h5 {
    font-size: 1.13333rem;
    line-height: 1.2; } }

@media all and (min-width: 1024px) {
  .h5,
  h5 {
    font-size: 1.2rem; } }

@media all and (min-width: 1200px) {
  .h5,
  h5 {
    font-size: 1.26667rem;
    line-height: 1.2; } }

@media all and (min-width: 1400px) {
  .h5,
  h5 {
    font-size: 1.26667rem;
    line-height: 1.2; } }

@media all and (min-width: 1700px) {
  .h5,
  h5 {
    font-size: 1.26667rem;
    line-height: 1.2; } }

.h6,
h6 {
  font-size: 0.86667rem;
  line-height: 1.3;
  font-weight: 500; }

@media all and (min-width: 320px) {
  .h6,
  h6 {
    font-size: 0.93333rem; } }

@media all and (min-width: 568px) {
  .h6,
  h6 {
    font-size: 0.93333rem; } }

@media all and (min-width: 768px) {
  .h6,
  h6 {
    font-size: 1rem;
    line-height: 1.2; } }

@media all and (min-width: 960px) {
  .h6,
  h6 {
    font-size: 1rem;
    line-height: 1.2; } }

@media all and (min-width: 1024px) {
  .h6,
  h6 {
    font-size: 1.06667rem; } }

@media all and (min-width: 1200px) {
  .h6,
  h6 {
    font-size: 1.13333rem;
    line-height: 1.2; } }

@media all and (min-width: 1400px) {
  .h6,
  h6 {
    font-size: 1.13333rem;
    line-height: 1.2; } }

@media all and (min-width: 1700px) {
  .h6,
  h6 {
    font-size: 1.13333rem;
    line-height: 1.2; } }

.keyboard-focus input:hover, .keyboard-focus input:focus,
.keyboard-focus select:hover,
.keyboard-focus select:focus,
.keyboard-focus button:hover,
.keyboard-focus button:focus {
  border: 2px solid #CF0031; }

.l-main p a,
.l-main li a {
  text-decoration: none;
  border-bottom: 3px solid #CF0031; }

.l-main p a:hover,
.l-main li a:hover {
  color: #CF0031; }

.contextual-links a {
  border-bottom-color: transparent !important; }

.contextual-links a:hover {
  border-bottom-color: transparent !important; }

a img {
  border: 0px; }

img {
  display: block;
  height: auto;
  max-width: 100%; }

a img {
  border: 0px;
  outline: 0; }

label {
  display: block;
  margin: 3px 0; }

.form-item {
  padding-bottom: 20px; }

input {
  border: 1px solid #000000;
  padding: 10px;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
  max-width: 100%; }

input:focus {
  outline: none;
  border: 1px solid #FFB81C; }

#edit-cancel {
  text-decoration: none; }

#user-login-form {
  padding-bottom: 80px; }

table {
  margin: 1em 0;
  border-spacing: 0; }

caption,
th,
td {
  padding: 10px; }

th {
  background-color: #FFB81C;
  color: #000000;
  text-align: left; }

.tablesaw-stack {
  display: block;
  overflow: scroll; }

.tablesaw-stack td .tablesaw-cell-label,
.tablesaw-stack td .tablesaw-cell-content {
  word-wrap: break-word;
  padding: 10px; }

.tablesaw-stack td .tablesaw-cell-label {
  background-color: #FFB81C;
  color: #000000;
  padding: 10px; }

@media all and (max-width: 39.9375em) {
  .tablesaw-stack tbody tr {
    display: block;
    border-bottom: none;
    padding: 1rem 0; }
  .tablesaw-stack td {
    padding: 0; } }

.block--tabs .block__content ul::after {
  clear: both;
  content: '';
  display: table; }

.max-container,
#user-login-form {
  max-width: 1024px;
  margin: 0 auto; }

.padding-vertical {
  padding-top: 1.875rem;
  padding-bottom: 5.625rem; }

@media all and (min-width: 48em) {
  .padding-vertical {
    padding-top: 2.813rem;
    padding-bottom: 6.563rem; } }

@media all and (min-width: 60em) {
  .padding-vertical {
    padding-top: 3.75rem;
    padding-bottom: 7.5rem; } }

#user-login-form,
.padding-horizontal {
  padding-left: 1.25rem;
  padding-right: 1.25rem; }

@media all and (min-width: 35.5em) {
  #user-login-form,
  .padding-horizontal {
    padding-left: 4.375rem;
    padding-right: 4.375rem; } }

@media all and (min-width: 48em) {
  #user-login-form,
  .padding-horizontal {
    padding-left: 2.5rem;
    padding-right: 2.5rem; } }

input[type="submit"], #edit-cancel {
  display: inline-block;
  width: 250px;
  padding: 10px;
  margin-right: 10px;
  font-size: 1rem;
  font-weight: bold;
  line-height: 1.2;
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: #000000;
  color: #FFFFFF;
  text-align: center;
  border: 1px solid #000000;
  cursor: pointer;
  -webkit-transition: all 0.25s linear;
  transition: all 0.25s linear; }

input:active[type="submit"], #edit-cancel:active {
  color: #000000;
  background-color: #FFB81C;
  border: 1px solid #FFB81C; }

input:hover[type="submit"], #edit-cancel:hover, input:focus[type="submit"], #edit-cancel:focus {
  color: #FFFFFF;
  background-color: #CF0031;
  border: 1px solid #FFFFFF; }

.image-label {
  color: #FFFFFF;
  font-size: 0.875rem;
  line-height: 1.438rem; }

#block-uor-local-tasks ul {
  padding: 0; }

.messages {
  margin-bottom: 1.4rem;
  background-color: #ecf6fa;
  color: #424242;
  overflow: hidden;
  padding: 20px 20px 20px 50px;
  position: relative;
  word-wrap: break-word; }

.messages a {
  color: #bcdeee;
  font-weight: 600;
  text-decoration: none; }

.messages::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 20px;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  display: inline-block;
  width: 20px;
  height: 20px;
  background-repeat: no-repeat;
  background-size: 100%;
  background-position: center; }

.messages__content > *:last-child {
  margin-bottom: 0; }

.messages--error {
  background-color: #ffe6e5; }

.messages--error::before {
  background-image: url("../images/help-messages/messages-error.png"); }

.messages--status {
  background-color: #eff8e6; }

.messages--status::before {
  background-image: url("../images/help-messages/messages-status.png"); }

.messages--warning {
  background-color: #fcf8e3;
  border-color: #faf2cc; }

.messages--warning::before {
  background-image: url("../images/help-messages/messages-warning.png"); }

.node-preview-container .node-preview-backlink {
  background-color: #FFB81C;
  padding: .5rem;
  color: white;
  text-transform: uppercase;
  font-size: .6rem;
  letter-spacing: .0223em; }

.node-preview-container .node-preview-backlink:hover {
  background-color: #ffb512; }

.node-preview-container .form-item-view-mode {
  display: none; }

.picker--focused .picker__day--highlighted .ui-datepicker,
.picker__day--highlighted:hover .ui-datepicker {
  font-family: "Roboto Condensed", Helvetica Neue, Helvetica, arial, sans-serif;
  border-radius: 0; }

.picker--focused .picker__day--highlighted .ui-datepicker-header,
.picker__day--highlighted:hover .ui-datepicker-header {
  border-radius: 0; }

.picker--focused .picker__day--highlighted .ui-widget-header,
.picker__day--highlighted:hover .ui-widget-header {
  background: none;
  background-color: #CF0031;
  border: 0; }

.picker--focused .picker__day--highlighted .ui-state-default,
.picker--focused .picker__day--highlighted .ui-widget-content .ui-state-default,
.picker__day--highlighted:hover .ui-state-default,
.picker__day--highlighted:hover .ui-widget-content .ui-state-default {
  background: none;
  background-color: #FFB81C; }

#cboxWrapper {
  border-radius: 0; }

.block--tabs {
  text-align: right; }

.block--tabs .block__content ul {
  margin-top: .5rem;
  margin-bottom: .5rem; }

.block--tabs .block__content ul li {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  margin: 0;
  padding: 0;
  list-style: none; }

.block--tabs .block__content ul li a {
  display: block;
  padding: .2rem .6em;
  letter-spacing: 1px;
  text-transform: uppercase;
  color: #FFFFFF;
  border: 2px solid #000000;
  background-color: #000000;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Helvetica, sans-serif !important;
  font-size: .7rem;
  font-weight: 500; }

.block--tabs .block__content ul li a:hover, .block--tabs .block__content ul li a:focus {
  color: #000000;
  background-color: #FFB81C; }

.block--tabs .block__content ul li.is-active a {
  color: #000000;
  background-color: #FFB81C; }

.block--tabs .block__content ul ul.tabs.primary {
  float: left;
  margin-bottom: 0;
  padding-left: 1rem; }

@media all and (min-width: 48em) {
  .block--tabs .block__content ul ul.tabs.primary {
    float: right; } }

.block--tabs .block__content ul ul.tabs.secondary {
  float: left;
  clear: both;
  margin-top: .5rem;
  padding-left: 1rem; }

@media all and (min-width: 48em) {
  .block--tabs .block__content ul ul.tabs.secondary {
    float: right; } }

.block--tabs .block__content ul ul.tabs.secondary a {
  padding: .1rem .4;
  font-size: .6rem;
  font-weight: 500; }

.skiplinks {
  left: 50%;
  margin-left: -7em;
  position: absolute;
  width: 14em;
  z-index: 9999; }

.skiplinks__link,
.skiplinks__link:visited,
.skiplinks__link:focus {
  background-color: #333;
  border: 2px solid #eee;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top: 0;
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
  color: #eee;
  display: inline-block;
  font-weight: bold;
  line-height: 1.5;
  margin: 0;
  outline: 0;
  padding: 0.25em 0.5em;
  text-align: center;
  text-decoration: none;
  width: 14em; }

#main:focus {
  outline: 0; }

.visually-hidden {
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  width: 1px !important;
  word-wrap: normal !important; }

.focusable:active, .focusable:focus {
  clip: auto !important;
  height: auto !important;
  overflow: visible !important;
  position: static !important;
  width: auto !important; }

.hidden {
  display: none !important; }

.invisible {
  visibility: hidden !important; }

::-moz-selection {
  background: #036091;
  color: white; }

::selection {
  background: #036091;
  color: white; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
