@charset "UTF-8";
/**
* 1. Set default font family to sans-serif.
* 2. Prevent iOS text size adjust after orientation change, without disabling
*    user zoom.
*/
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
* Remove default margin.
*/
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
* Correct `block` display not defined for any HTML5 element in IE 8/9.
* Correct `block` display not defined for `details` or `summary` in IE 10/11
* and Firefox.
* Correct `block` display not defined for `main` in IE 11.
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
* 1. Correct `inline-block` display not defined in IE 8/9.
* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
* Prevent modern browsers from displaying `audio` without controls.
* Remove excess height in iOS 5 devices.
*/
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   */
[hidden] {
  display: none; }

/**
* Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
*/
template {
  display: none; }

/* Links
   ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent; }

/**
* Improve readability when focused and also mouse hovered in all browsers.
*/
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
* Address styling not present in IE 8/9/10/11, Safari, and Chrome.
*/
abbr[title] {
  border-bottom: 1px dotted; }

/**
* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
*/
/**
* Address styling not present in Safari and Chrome.
*/
dfn {
  font-style: italic; }

/**
* Address variable `h1` font-size and margin within `section` and `article`
* contexts in Firefox 4+, Safari, and Chrome.
*/
h1 {
  font-size: 2em;
  margin: 0.66667em 0; }

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000; }

/**
* Address inconsistent and variable font size in all browsers.
*/
small {
  font-size: 80%; }

/**
* Prevent `sub` and `sup` affecting `line-height` in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0; }

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px; }

/**
* Address differences between Firefox and other browsers.
*/
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
* Contain overflow in all browsers.
*/
pre {
  overflow: auto; }

/**
* Address odd `em`-unit font size rendering in all browsers.
*/
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
* Known limitation: by default, Chrome and Safari on OS X allow very limited
* styling of `select`, unless a `border` property is set.
*/
/**
* 1. Correct color not being inherited.
*    Known issue: affects color of disabled elements.
* 2. Correct font properties not being inherited.
* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible; }

/**
* Address inconsistent `text-transform` inheritance for `button` and `select`.
* All other form control elements do not inherit `text-transform` values.
* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
* Correct `select` style inheritance in Firefox.
*/
button,
select {
  text-transform: none; }

/**
* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
*    and `video` controls.
* 2. Correct inability to style clickable `input` types in iOS.
* 3. Improve usability and consistency of cursor style between image-type
*    `input` and others.
*/
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
* Re-set default cursor for disabled elements.
*/
button[disabled],
html input[disabled] {
  cursor: default; }

/**
* Remove inner padding and border in Firefox 4+.
*/
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
* Address Firefox 4+ setting `line-height` on `input` using `!important` in
* the UA stylesheet.
*/
input {
  line-height: normal; }

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type='checkbox'],
input[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
* Fix the cursor style for Chrome's increment/decrement buttons. For certain
* `font-size` values of the `input`, it causes the cursor style of the
* decrement button to change from `default` to `text`.
*/
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
* 1. Address `appearance` set to `searchfield` in Safari and Chrome.
* 2. Address `box-sizing` set to `border-box` in Safari and Chrome
*    (include `-moz` to future-proof).
*/
input[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
* Remove inner padding and search cancel button in Safari and Chrome on OS X.
* Safari (but not Chrome) clips the cancel button when the search input has
* padding (and `textfield` appearance).
*/
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
* Define consistent border, margin, and padding.
*/
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
* 1. Correct `color` not being inherited in IE 8/9/10/11.
* 2. Remove padding so people aren't caught out if they zero out fieldsets.
*/
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto; }

/**
* Don't inherit the `font-weight` (applied by a rule above).
* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
*/
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
* Remove most spacing between table cells.
*/
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.messages:after, nav.tabs:after {
  content: "";
  display: table;
  clear: both; }

.node-preview-container .node-preview-backlink {
  -webkit-transition: all .2s;
  transition: all .2s; }

.region-prefix {
  margin-top: .5rem; }

.messages {
  color: #212B35;
  font-size: .875em;
  margin: 0 !important;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none; }
  .messages ul.messages__list {
    margin: 0;
    margin-left: 1rem; }
    .messages ul.messages__list li:not(:first-child) {
      margin-top: .5rem; }
  .messages:before {
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 1em;
    display: block;
    float: left;
    height: 2em;
    margin-right: 1em;
    margin-left: -1.5rem;
    margin-top: -.3em;
    padding-top: .3rem;
    speak: none;
    text-align: center;
    width: 2em;
    font-family: Arial !important; }
  .messages h2 {
    margin: 0; }
  .messages.messages--status {
    background-color: rgba(92, 187, 70, 0.5);
    background-image: none;
    border: 0; }
    .messages.messages--status:before {
      content: "âœ”"; }
  .messages.messages--warning {
    background-color: rgba(253, 183, 39, 0.5);
    background-image: none;
    border: 0; }
    .messages.messages--warning:before {
      content: "!";
      font-family: Arial !important; }
  .messages.messages--error {
    background-color: rgba(237, 28, 46, 0.5);
    background-image: none;
    border: 0; }
    .messages.messages--error:before {
      content: "!";
      font-family: Arial !important; }

.node-preview-container .node-preview-backlink {
  background-color: #0d324d;
  padding: .5rem;
  color: white;
  text-transform: uppercase;
  font-size: .6rem;
  letter-spacing: .0223em; }
  .node-preview-container .node-preview-backlink:hover {
    background-color: #0c2c44; }

.node-preview-container .form-item-view-mode {
  display: none; }

.ui-datepicker {
  font-family: "Rubik", "Helvetica Neue", Helvetica, Arial, sans-serif;
  border-radius: 0; }

.ui-datepicker-header {
  border-radius: 0; }

.ui-widget-header {
  background: none;
  background-color: #EEEEEE;
  border: 0; }

.ui-state-default,
.ui-widget-content .ui-state-default {
  background: none;
  background-color: #FAFAFA; }

.ui-state-highlight {
  border: 1px solid #deb408 !important; }

#cboxWrapper {
  border-radius: 0; }

.field--name-user-picture img {
  border-radius: 50%; }

h2.styleguide {
  letter-spacing: 2px;
  text-transform: uppercase;
  color: #507b2c;
  font-weight: 600;
  font-size: 0.8rem;
  font-family: "Apex Rounded", "Helvetica Neue", Helvetica, Arial, sans-serif; }

.contextual-links-wrapper a.contextual-links-trigger {
  border-bottom: 1px solid transparent; }

.contextual-links-wrapper ul.contextual-links li a {
  border-bottom: 1px solid transparent; }

nav.tabs {
  margin-top: .5rem;
  margin-bottom: 1rem; }
  nav.tabs li {
    margin: 0;
    padding: 0; }
    nav.tabs li a {
      bottom-bottom: 0 !important;
      color: #2a414f;
      display: block;
      font-size: .6rem;
      padding: .2rem .6em;
      text-transform: uppercase;
      font-weight: 500;
      letter-spacing: 1px;
      border: 2px solid #2e323d;
      background-color: white; }
      nav.tabs li a:hover {
        background-color: #2e323d;
        bottom-bottom: 0 !important;
        color: white; }
  nav.tabs li.is-active a {
    background-color: #2e323d;
    color: white; }
  nav.tabs ul.tabs.primary {
    margin-bottom: 0;
    float: left;
    padding-left: 1rem; }
    @media all and (min-width: 48em) {
      nav.tabs ul.tabs.primary {
        float: right; } }
  nav.tabs ul.tabs.secondary {
    clear: both;
    float: left;
    padding-left: 1rem;
    margin-top: .5rem; }
    @media all and (min-width: 48em) {
      nav.tabs ul.tabs.secondary {
        float: right; } }
    nav.tabs ul.tabs.secondary a {
      font-size: .6rem;
      padding: .1rem .4;
      font-weight: 500; }

.file--general,
.file--application-octet-stream {
  background-image: url(../images/icons/file-exe.svg); }

.file--package-x-generic {
  background-image: url(../images/icons/file-generic.svg); }

.file--x-office-spreadsheet {
  background-image: url(../images/icons/file-xls.svg); }

.file--x-office-document {
  background-image: url(../images/icons/file-doc.svg); }

.file--x-office-presentation {
  background-image: url(../images/icons/file-ppt.svg); }

.file--text-x-script {
  background-image: url(../images/icons/file-js.svg); }

.file--text-html {
  background-image: url(../images/icons/file-html.svg); }

.file--text-plain {
  background-image: url(../images/icons/text-plain.png); }

.file--application-pdf {
  background-image: url(../images/icons/file-pdf.svg); }

.file--application-x-executable {
  background-image: url(../images/icons/file-exe.svg); }

.file--audio {
  background-image: url(../images/icons/file-mp3.svg); }

.file--video {
  background-image: url(../images/icons/file-mp4.svg); }

.file--text {
  background-image: url(../images/icons/file-txt.svg); }

.file--image {
  background-image: url(../images/icons/file-jpg.svg); }

.file--mime-application-postscript {
  background-image: url(../images/icons/file-eps.svg); }

.file {
  background-size: 16px auto;
  background-position: left top; }

a[data-entity-type="file"] {
  position: relative;
  margin-left: 1rem;
  font-weight: 500;
  border-bottom: 1px dotted; }
  a[data-entity-type="file"]:before {
    position: absolute;
    content: ' ';
    width: .75rem;
    height: 1rem;
    left: -.9rem;
    top: .12rem;
    background-image: url(../images/icons/attach-2.svg);
    background-repeat: no-repeat;
    background-size: 1rem 1rem; }

/**
* 1. Set default font family to sans-serif.
* 2. Prevent iOS text size adjust after orientation change, without disabling
*    user zoom.
*/
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
* Remove default margin.
*/
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
* Correct `block` display not defined for any HTML5 element in IE 8/9.
* Correct `block` display not defined for `details` or `summary` in IE 10/11
* and Firefox.
* Correct `block` display not defined for `main` in IE 11.
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
* 1. Correct `inline-block` display not defined in IE 8/9.
* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
* Prevent modern browsers from displaying `audio` without controls.
* Remove excess height in iOS 5 devices.
*/
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   */
[hidden] {
  display: none; }

/**
* Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
*/
template {
  display: none; }

/* Links
   ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent; }

/**
* Improve readability when focused and also mouse hovered in all browsers.
*/
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
* Address styling not present in IE 8/9/10/11, Safari, and Chrome.
*/
abbr[title] {
  border-bottom: 1px dotted; }

/**
* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
*/
/**
* Address styling not present in Safari and Chrome.
*/
dfn {
  font-style: italic; }

/**
* Address variable `h1` font-size and margin within `section` and `article`
* contexts in Firefox 4+, Safari, and Chrome.
*/
h1 {
  font-size: 2em;
  margin: 0.66667em 0; }

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000; }

/**
* Address inconsistent and variable font size in all browsers.
*/
small {
  font-size: 80%; }

/**
* Prevent `sub` and `sup` affecting `line-height` in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0; }

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px; }

/**
* Address differences between Firefox and other browsers.
*/
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
* Contain overflow in all browsers.
*/
pre {
  overflow: auto; }

/**
* Address odd `em`-unit font size rendering in all browsers.
*/
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
* Known limitation: by default, Chrome and Safari on OS X allow very limited
* styling of `select`, unless a `border` property is set.
*/
/**
* 1. Correct color not being inherited.
*    Known issue: affects color of disabled elements.
* 2. Correct font properties not being inherited.
* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible; }

/**
* Address inconsistent `text-transform` inheritance for `button` and `select`.
* All other form control elements do not inherit `text-transform` values.
* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
* Correct `select` style inheritance in Firefox.
*/
button,
select {
  text-transform: none; }

/**
* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
*    and `video` controls.
* 2. Correct inability to style clickable `input` types in iOS.
* 3. Improve usability and consistency of cursor style between image-type
*    `input` and others.
*/
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
* Re-set default cursor for disabled elements.
*/
button[disabled],
html input[disabled] {
  cursor: default; }

/**
* Remove inner padding and border in Firefox 4+.
*/
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
* Address Firefox 4+ setting `line-height` on `input` using `!important` in
* the UA stylesheet.
*/
input {
  line-height: normal; }

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type='checkbox'],
input[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
* Fix the cursor style for Chrome's increment/decrement buttons. For certain
* `font-size` values of the `input`, it causes the cursor style of the
* decrement button to change from `default` to `text`.
*/
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
* 1. Address `appearance` set to `searchfield` in Safari and Chrome.
* 2. Address `box-sizing` set to `border-box` in Safari and Chrome
*    (include `-moz` to future-proof).
*/
input[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
* Remove inner padding and search cancel button in Safari and Chrome on OS X.
* Safari (but not Chrome) clips the cancel button when the search input has
* padding (and `textfield` appearance).
*/
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
* Define consistent border, margin, and padding.
*/
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
* 1. Correct `color` not being inherited in IE 8/9/10/11.
* 2. Remove padding so people aren't caught out if they zero out fieldsets.
*/
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto; }

/**
* Don't inherit the `font-weight` (applied by a rule above).
* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
*/
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
* Remove most spacing between table cells.
*/
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.messages:after, nav.tabs:after {
  content: "";
  display: table;
  clear: both; }

.node-preview-container .node-preview-backlink {
  -webkit-transition: all .2s;
  transition: all .2s; }

.region-prefix {
  margin-top: .5rem; }

.messages {
  color: #212B35;
  font-size: .875em;
  margin: 0 !important;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none; }
  .messages ul.messages__list {
    margin: 0;
    margin-left: 1rem; }
    .messages ul.messages__list li:not(:first-child) {
      margin-top: .5rem; }
  .messages:before {
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 1em;
    display: block;
    float: left;
    height: 2em;
    margin-right: 1em;
    margin-left: -1.5rem;
    margin-top: -.3em;
    padding-top: .3rem;
    speak: none;
    text-align: center;
    width: 2em;
    font-family: Arial !important; }
  .messages h2 {
    margin: 0; }
  .messages.messages--status {
    background-color: rgba(92, 187, 70, 0.5);
    background-image: none;
    border: 0; }
    .messages.messages--status:before {
      content: "âœ”"; }
  .messages.messages--warning {
    background-color: rgba(253, 183, 39, 0.5);
    background-image: none;
    border: 0; }
    .messages.messages--warning:before {
      content: "!";
      font-family: Arial !important; }
  .messages.messages--error {
    background-color: rgba(237, 28, 46, 0.5);
    background-image: none;
    border: 0; }
    .messages.messages--error:before {
      content: "!";
      font-family: Arial !important; }

.node-preview-container .node-preview-backlink {
  background-color: #0d324d;
  padding: .5rem;
  color: white;
  text-transform: uppercase;
  font-size: .6rem;
  letter-spacing: .0223em; }
  .node-preview-container .node-preview-backlink:hover {
    background-color: #0c2c44; }

.node-preview-container .form-item-view-mode {
  display: none; }

.ui-datepicker {
  font-family: "Rubik", "Helvetica Neue", Helvetica, Arial, sans-serif;
  border-radius: 0; }

.ui-datepicker-header {
  border-radius: 0; }

.ui-widget-header {
  background: none;
  background-color: #EEEEEE;
  border: 0; }

.ui-state-default,
.ui-widget-content .ui-state-default {
  background: none;
  background-color: #FAFAFA; }

.ui-state-highlight {
  border: 1px solid #deb408 !important; }

#cboxWrapper {
  border-radius: 0; }

.field--name-user-picture img {
  border-radius: 50%; }

h2.styleguide {
  letter-spacing: 2px;
  text-transform: uppercase;
  color: #507b2c;
  font-weight: 600;
  font-size: 0.8rem;
  font-family: "Apex Rounded", "Helvetica Neue", Helvetica, Arial, sans-serif; }

.contextual-links-wrapper a.contextual-links-trigger {
  border-bottom: 1px solid transparent; }

.contextual-links-wrapper ul.contextual-links li a {
  border-bottom: 1px solid transparent; }

nav.tabs {
  margin-top: .5rem;
  margin-bottom: 1rem; }
  nav.tabs li {
    margin: 0;
    padding: 0; }
    nav.tabs li a {
      bottom-bottom: 0 !important;
      color: #2a414f;
      display: block;
      font-size: .6rem;
      padding: .2rem .6em;
      text-transform: uppercase;
      font-weight: 500;
      letter-spacing: 1px;
      border: 2px solid #2e323d;
      background-color: white; }
      nav.tabs li a:hover {
        background-color: #2e323d;
        bottom-bottom: 0 !important;
        color: white; }
  nav.tabs li.is-active a {
    background-color: #2e323d;
    color: white; }
  nav.tabs ul.tabs.primary {
    margin-bottom: 0;
    float: left;
    padding-left: 1rem; }
    @media all and (min-width: 48em) {
      nav.tabs ul.tabs.primary {
        float: right; } }
  nav.tabs ul.tabs.secondary {
    clear: both;
    float: left;
    padding-left: 1rem;
    margin-top: .5rem; }
    @media all and (min-width: 48em) {
      nav.tabs ul.tabs.secondary {
        float: right; } }
    nav.tabs ul.tabs.secondary a {
      font-size: .6rem;
      padding: .1rem .4;
      font-weight: 500; }

.file--general,
.file--application-octet-stream {
  background-image: url(../images/icons/file-exe.svg); }

.file--package-x-generic {
  background-image: url(../images/icons/file-generic.svg); }

.file--x-office-spreadsheet {
  background-image: url(../images/icons/file-xls.svg); }

.file--x-office-document {
  background-image: url(../images/icons/file-doc.svg); }

.file--x-office-presentation {
  background-image: url(../images/icons/file-ppt.svg); }

.file--text-x-script {
  background-image: url(../images/icons/file-js.svg); }

.file--text-html {
  background-image: url(../images/icons/file-html.svg); }

.file--text-plain {
  background-image: url(../images/icons/text-plain.png); }

.file--application-pdf {
  background-image: url(../images/icons/file-pdf.svg); }

.file--application-x-executable {
  background-image: url(../images/icons/file-exe.svg); }

.file--audio {
  background-image: url(../images/icons/file-mp3.svg); }

.file--video {
  background-image: url(../images/icons/file-mp4.svg); }

.file--text {
  background-image: url(../images/icons/file-txt.svg); }

.file--image {
  background-image: url(../images/icons/file-jpg.svg); }

.file--mime-application-postscript {
  background-image: url(../images/icons/file-eps.svg); }

.file {
  background-size: 16px auto;
  background-position: left top; }

a[data-entity-type="file"] {
  position: relative;
  margin-left: 1rem;
  font-weight: 500;
  border-bottom: 1px dotted; }
  a[data-entity-type="file"]:before {
    position: absolute;
    content: ' ';
    width: .75rem;
    height: 1rem;
    left: -.9rem;
    top: .12rem;
    background-image: url(../images/icons/attach-2.svg);
    background-repeat: no-repeat;
    background-size: 1rem 1rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNrZWRpdG9yLmNzcyIsInBhcnRpYWxzLzAxLWdsb2JhbC9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy8wMS1nbG9iYWwvX2V4dGVuZHMuc2NzcyIsInBhcnRpYWxzLzAxLWdsb2JhbC9fbWl4aW5zLnNjc3MiLCJwYXJ0aWFscy8wMS1nbG9iYWwvdXRpbGl0eS9fbWVzc2FnZXMuc2NzcyIsInBhcnRpYWxzLzAxLWdsb2JhbC9tYXBzL19wYWxldHRlcy5zY3NzIiwicGFydGlhbHMvMDEtZ2xvYmFsL3V0aWxpdHkvX25vZGUtLXByZXZpZXctY29udGFpbmVyLnNjc3MiLCJwYXJ0aWFscy8wMS1nbG9iYWwvX3ZhcmlhYmxlcy5zY3NzIiwicGFydGlhbHMvMDEtZ2xvYmFsL3V0aWxpdHkvX2RhdGUtLXBpY2tlci5zY3NzIiwicGFydGlhbHMvMDEtZ2xvYmFsL3V0aWxpdHkvX2NvbG9yYm94LnNjc3MiLCJwYXJ0aWFscy8wMS1nbG9iYWwvdXRpbGl0eS9fdXNlci1waWN0dXJlLnNjc3MiLCJwYXJ0aWFscy8wMS1nbG9iYWwvdXRpbGl0eS9fc3R5bGVndWlkZS5zY3NzIiwicGFydGlhbHMvMDEtZ2xvYmFsL3V0aWxpdHkvX2NvbnRleHR1YWwtbGlua3Muc2NzcyIsInBhcnRpYWxzLzAxLWdsb2JhbC91dGlsaXR5L190YWJzLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvbWFwcHktYnJlYWtwb2ludHMvX21hcHB5LWJyZWFrcG9pbnRzLnNjc3MiLCJwYXJ0aWFscy8wMS1nbG9iYWwvaWNvbnMvX2ZpbGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUNvRWpCOzs7O0VBSUU7QUFDRjtFQUNFLHdCQW5EMkI7RUFtRGUsT0FBTztFQUNqRCwyQkFBMEI7RUFBRyxPQUFPO0VBQ3BDLCtCQUE4QjtFQUFHLE9BQU8sRUFDekM7O0FBRUQ7O0VBRUU7QUFFRjtFQUNFLFVBQVMsRUFDVjs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7O0VBS0U7QUFFRjs7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QjtFQUNqQixpQkFBZ0I7RUFDaEIsMEJBQXlCLEVBYzFCO0VBbEJEO0lBT0ksbUJBQWtCO0lBQ2xCLGFBQVk7SUFDWixjQUFhO0lBQ2IsYUFBWTtJQUNaLGFBQVk7SUFDWixZQUFXO0lBQ1gsb0RBQW1EO0lBQ25ELDZCQUE0QjtJQUM1QiwyQkFBMEIsRUFDM0IiLCJmaWxlIjoiY2tlZGl0b3IuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyoqXG4qIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4qIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuKiAgICB1c2VyIHpvb20uXG4qL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4qL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4qIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4qIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4qIGFuZCBGaXJlZm94LlxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4qL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAgICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICAgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAgICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4qIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDsgfVxuXG4vKipcbiogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuKi9cbi8qKlxuKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4qL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4qIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjY2NjdlbSAwOyB9XG5cbi8qKlxuICAgKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICAgKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4qL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gICAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICAgKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAgICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAgICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4qL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiovXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4qL1xuLyoqXG4qIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4qIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4qIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gICAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICAgKi9cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4qIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4qIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4qIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4qIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuKi9cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT0nYnV0dG9uJ10sXG5pbnB1dFt0eXBlPSdyZXNldCddLFxuaW5wdXRbdHlwZT0nc3VibWl0J10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4qIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuKiB0aGUgVUEgc3R5bGVzaGVldC5cbiovXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7IH1cblxuLyoqXG4gICAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAgICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAgICpcbiAgICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgICovXG5pbnB1dFt0eXBlPSdjaGVja2JveCddLFxuaW5wdXRbdHlwZT0ncmFkaW8nXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4qL1xuaW5wdXRbdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4qIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4qL1xuaW5wdXRbdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyB9XG5cbi8qKlxuKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4qL1xuaW5wdXRbdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPSdzZWFyY2gnXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4qIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICAgKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4qIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4qL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLm1lc3NhZ2VzOmFmdGVyLCBuYXYudGFiczphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG4ubm9kZS1wcmV2aWV3LWNvbnRhaW5lciAubm9kZS1wcmV2aWV3LWJhY2tsaW5rIHtcbiAgdHJhbnNpdGlvbjogYWxsIC4yczsgfVxuXG4ucmVnaW9uLXByZWZpeCB7XG4gIG1hcmdpbi10b3A6IC41cmVtOyB9XG5cbi5tZXNzYWdlcyB7XG4gIGNvbG9yOiAjMjEyQjM1O1xuICBmb250LXNpemU6IC44NzVlbTtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgLm1lc3NhZ2VzIHVsLm1lc3NhZ2VzX19saXN0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07IH1cbiAgICAubWVzc2FnZXMgdWwubWVzc2FnZXNfX2xpc3QgbGk6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLXRvcDogLjVyZW07IH1cbiAgLm1lc3NhZ2VzOmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIGJvcmRlci1yYWRpdXM6IDFlbTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmbG9hdDogbGVmdDtcbiAgICBoZWlnaHQ6IDJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICBtYXJnaW4tbGVmdDogLTEuNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAtLjNlbTtcbiAgICBwYWRkaW5nLXRvcDogLjNyZW07XG4gICAgc3BlYWs6IG5vbmU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAyZW07XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsICFpbXBvcnRhbnQ7IH1cbiAgLm1lc3NhZ2VzIGgyIHtcbiAgICBtYXJnaW46IDA7IH1cbiAgLm1lc3NhZ2VzLm1lc3NhZ2VzLS1zdGF0dXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoOTIsIDE4NywgNzAsIDAuNSk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBib3JkZXI6IDA7IH1cbiAgICAubWVzc2FnZXMubWVzc2FnZXMtLXN0YXR1czpiZWZvcmUge1xuICAgICAgY29udGVudDogXCLinJRcIjsgfVxuICAubWVzc2FnZXMubWVzc2FnZXMtLXdhcm5pbmcge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUzLCAxODMsIDM5LCAwLjUpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwOyB9XG4gICAgLm1lc3NhZ2VzLm1lc3NhZ2VzLS13YXJuaW5nOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIiFcIjtcbiAgICAgIGZvbnQtZmFtaWx5OiBBcmlhbCAhaW1wb3J0YW50OyB9XG4gIC5tZXNzYWdlcy5tZXNzYWdlcy0tZXJyb3Ige1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM3LCAyOCwgNDYsIDAuNSk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBib3JkZXI6IDA7IH1cbiAgICAubWVzc2FnZXMubWVzc2FnZXMtLWVycm9yOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIiFcIjtcbiAgICAgIGZvbnQtZmFtaWx5OiBBcmlhbCAhaW1wb3J0YW50OyB9XG5cbi5ub2RlLXByZXZpZXctY29udGFpbmVyIC5ub2RlLXByZXZpZXctYmFja2xpbmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGQzMjRkO1xuICBwYWRkaW5nOiAuNXJlbTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IC42cmVtO1xuICBsZXR0ZXItc3BhY2luZzogLjAyMjNlbTsgfVxuICAubm9kZS1wcmV2aWV3LWNvbnRhaW5lciAubm9kZS1wcmV2aWV3LWJhY2tsaW5rOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGMyYzQ0OyB9XG5cbi5ub2RlLXByZXZpZXctY29udGFpbmVyIC5mb3JtLWl0ZW0tdmlldy1tb2RlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4udWktZGF0ZXBpY2tlciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJ1YmlrXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgYm9yZGVyLXJhZGl1czogMDsgfVxuXG4udWktZGF0ZXBpY2tlci1oZWFkZXIge1xuICBib3JkZXItcmFkaXVzOiAwOyB9XG5cbi51aS13aWRnZXQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTtcbiAgYm9yZGVyOiAwOyB9XG5cbi51aS1zdGF0ZS1kZWZhdWx0LFxuLnVpLXdpZGdldC1jb250ZW50IC51aS1zdGF0ZS1kZWZhdWx0IHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQTsgfVxuXG4udWktc3RhdGUtaGlnaGxpZ2h0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlYjQwOCAhaW1wb3J0YW50OyB9XG5cbiNjYm94V3JhcHBlciB7XG4gIGJvcmRlci1yYWRpdXM6IDA7IH1cblxuLmZpZWxkLS1uYW1lLXVzZXItcGljdHVyZSBpbWcge1xuICBib3JkZXItcmFkaXVzOiA1MCU7IH1cblxuaDIuc3R5bGVndWlkZSB7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjNTA3YjJjO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDAuOHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiQXBleCBSb3VuZGVkXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsgfVxuXG4uY29udGV4dHVhbC1saW5rcy13cmFwcGVyIGEuY29udGV4dHVhbC1saW5rcy10cmlnZ2VyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG5cbi5jb250ZXh0dWFsLWxpbmtzLXdyYXBwZXIgdWwuY29udGV4dHVhbC1saW5rcyBsaSBhIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG5cbm5hdi50YWJzIHtcbiAgbWFyZ2luLXRvcDogLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgbmF2LnRhYnMgbGkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwOyB9XG4gICAgbmF2LnRhYnMgbGkgYSB7XG4gICAgICBib3R0b20tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICBjb2xvcjogIzJhNDE0ZjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAuNnJlbTtcbiAgICAgIHBhZGRpbmc6IC4ycmVtIC42ZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjMmUzMjNkO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgICAgIG5hdi50YWJzIGxpIGE6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmUzMjNkO1xuICAgICAgICBib3R0b20tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICBuYXYudGFicyBsaS5pcy1hY3RpdmUgYSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJlMzIzZDtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgbmF2LnRhYnMgdWwudGFicy5wcmltYXJ5IHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTsgfVxuICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgICAgIG5hdi50YWJzIHVsLnRhYnMucHJpbWFyeSB7XG4gICAgICAgIGZsb2F0OiByaWdodDsgfSB9XG4gIG5hdi50YWJzIHVsLnRhYnMuc2Vjb25kYXJ5IHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgbWFyZ2luLXRvcDogLjVyZW07IH1cbiAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgICBuYXYudGFicyB1bC50YWJzLnNlY29uZGFyeSB7XG4gICAgICAgIGZsb2F0OiByaWdodDsgfSB9XG4gICAgbmF2LnRhYnMgdWwudGFicy5zZWNvbmRhcnkgYSB7XG4gICAgICBmb250LXNpemU6IC42cmVtO1xuICAgICAgcGFkZGluZzogLjFyZW0gLjQ7XG4gICAgICBmb250LXdlaWdodDogNTAwOyB9XG5cbi5maWxlLS1nZW5lcmFsLFxuLmZpbGUtLWFwcGxpY2F0aW9uLW9jdGV0LXN0cmVhbSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1leGUuc3ZnKTsgfVxuXG4uZmlsZS0tcGFja2FnZS14LWdlbmVyaWMge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtZ2VuZXJpYy5zdmcpOyB9XG5cbi5maWxlLS14LW9mZmljZS1zcHJlYWRzaGVldCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS14bHMuc3ZnKTsgfVxuXG4uZmlsZS0teC1vZmZpY2UtZG9jdW1lbnQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtZG9jLnN2Zyk7IH1cblxuLmZpbGUtLXgtb2ZmaWNlLXByZXNlbnRhdGlvbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1wcHQuc3ZnKTsgfVxuXG4uZmlsZS0tdGV4dC14LXNjcmlwdCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1qcy5zdmcpOyB9XG5cbi5maWxlLS10ZXh0LWh0bWwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtaHRtbC5zdmcpOyB9XG5cbi5maWxlLS10ZXh0LXBsYWluIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy90ZXh0LXBsYWluLnBuZyk7IH1cblxuLmZpbGUtLWFwcGxpY2F0aW9uLXBkZiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1wZGYuc3ZnKTsgfVxuXG4uZmlsZS0tYXBwbGljYXRpb24teC1leGVjdXRhYmxlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWV4ZS5zdmcpOyB9XG5cbi5maWxlLS1hdWRpbyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1tcDMuc3ZnKTsgfVxuXG4uZmlsZS0tdmlkZW8ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtbXA0LnN2Zyk7IH1cblxuLmZpbGUtLXRleHQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtdHh0LnN2Zyk7IH1cblxuLmZpbGUtLWltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWpwZy5zdmcpOyB9XG5cbi5maWxlLS1taW1lLWFwcGxpY2F0aW9uLXBvc3RzY3JpcHQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtZXBzLnN2Zyk7IH1cblxuLmZpbGUge1xuICBiYWNrZ3JvdW5kLXNpemU6IDE2cHggYXV0bztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCB0b3A7IH1cblxuYVtkYXRhLWVudGl0eS10eXBlPVwiZmlsZVwiXSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IH1cbiAgYVtkYXRhLWVudGl0eS10eXBlPVwiZmlsZVwiXTpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjb250ZW50OiAnICc7XG4gICAgd2lkdGg6IC43NXJlbTtcbiAgICBoZWlnaHQ6IDFyZW07XG4gICAgbGVmdDogLS45cmVtO1xuICAgIHRvcDogLjEycmVtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvYXR0YWNoLTIuc3ZnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMXJlbSAxcmVtOyB9XG5cbi8qKlxuKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiogICAgdXNlciB6b29tLlxuKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuKiBhbmQgRmlyZWZveC5cbiogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gICAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAgICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4qIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gICAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4qIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IH1cblxuLyoqXG4qIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG4vKipcbiogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4qL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY2NjY3ZW0gMDsgfVxuXG4vKipcbiAgICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAgICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4qIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4qIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICAgKi9cbmltZyB7XG4gIGJvcmRlcjogMDsgfVxuXG4vKipcbiAgICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gICAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gICAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuKi9cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4qL1xucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4qIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuKi9cbi8qKlxuKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4qICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqLyB9XG5cbi8qKlxuICAgKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAgICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4qL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4qIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4qICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4qIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4qICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9J2J1dHRvbiddLFxuaW5wdXRbdHlwZT0ncmVzZXQnXSxcbmlucHV0W3R5cGU9J3N1Ym1pdCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4qIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4qL1xuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbi8qKlxuKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4qL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4qIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiogdGhlIFVBIHN0eWxlc2hlZXQuXG4qL1xuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbi8qKlxuICAgKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gICAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gICAqXG4gICAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gICAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gICAqL1xuaW5wdXRbdHlwZT0nY2hlY2tib3gnXSxcbmlucHV0W3R5cGU9J3JhZGlvJ10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuKi9cbmlucHV0W3R5cGU9J251bWJlciddOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4qIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4qICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuKi9cbmlucHV0W3R5cGU9J3NlYXJjaCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgfVxuXG4vKipcbiogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4qIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuKi9cbmlucHV0W3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4qIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4qL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAgICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4qIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4qIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG5cbi5tZXNzYWdlczphZnRlciwgbmF2LnRhYnM6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLm5vZGUtcHJldmlldy1jb250YWluZXIgLm5vZGUtcHJldmlldy1iYWNrbGluayB7XG4gIHRyYW5zaXRpb246IGFsbCAuMnM7IH1cblxuLnJlZ2lvbi1wcmVmaXgge1xuICBtYXJnaW4tdG9wOiAuNXJlbTsgfVxuXG4ubWVzc2FnZXMge1xuICBjb2xvcjogIzIxMkIzNTtcbiAgZm9udC1zaXplOiAuODc1ZW07XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3gtc2hhZG93OiBub25lOyB9XG4gIC5tZXNzYWdlcyB1bC5tZXNzYWdlc19fbGlzdCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAxcmVtOyB9XG4gICAgLm1lc3NhZ2VzIHVsLm1lc3NhZ2VzX19saXN0IGxpOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi10b3A6IC41cmVtOyB9XG4gIC5tZXNzYWdlczpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgbWFyZ2luLWxlZnQ6IC0xLjVyZW07XG4gICAgbWFyZ2luLXRvcDogLS4zZW07XG4gICAgcGFkZGluZy10b3A6IC4zcmVtO1xuICAgIHNwZWFrOiBub25lO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMmVtO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCAhaW1wb3J0YW50OyB9XG4gIC5tZXNzYWdlcyBoMiB7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5tZXNzYWdlcy5tZXNzYWdlcy0tc3RhdHVzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDkyLCAxODcsIDcwLCAwLjUpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwOyB9XG4gICAgLm1lc3NhZ2VzLm1lc3NhZ2VzLS1zdGF0dXM6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwi4pyUXCI7IH1cbiAgLm1lc3NhZ2VzLm1lc3NhZ2VzLS13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1MywgMTgzLCAzOSwgMC41KTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGJvcmRlcjogMDsgfVxuICAgIC5tZXNzYWdlcy5tZXNzYWdlcy0td2FybmluZzpiZWZvcmUge1xuICAgICAgY29udGVudDogXCIhXCI7XG4gICAgICBmb250LWZhbWlseTogQXJpYWwgIWltcG9ydGFudDsgfVxuICAubWVzc2FnZXMubWVzc2FnZXMtLWVycm9yIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzNywgMjgsIDQ2LCAwLjUpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwOyB9XG4gICAgLm1lc3NhZ2VzLm1lc3NhZ2VzLS1lcnJvcjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCIhXCI7XG4gICAgICBmb250LWZhbWlseTogQXJpYWwgIWltcG9ydGFudDsgfVxuXG4ubm9kZS1wcmV2aWV3LWNvbnRhaW5lciAubm9kZS1wcmV2aWV3LWJhY2tsaW5rIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBkMzI0ZDtcbiAgcGFkZGluZzogLjVyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAuNnJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wMjIzZW07IH1cbiAgLm5vZGUtcHJldmlldy1jb250YWluZXIgLm5vZGUtcHJldmlldy1iYWNrbGluazpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBjMmM0NDsgfVxuXG4ubm9kZS1wcmV2aWV3LWNvbnRhaW5lciAuZm9ybS1pdGVtLXZpZXctbW9kZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLnVpLWRhdGVwaWNrZXIge1xuICBmb250LWZhbWlseTogXCJSdWJpa1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGJvcmRlci1yYWRpdXM6IDA7IH1cblxuLnVpLWRhdGVwaWNrZXItaGVhZGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMDsgfVxuXG4udWktd2lkZ2V0LWhlYWRlciB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUVFRUU7XG4gIGJvcmRlcjogMDsgfVxuXG4udWktc3RhdGUtZGVmYXVsdCxcbi51aS13aWRnZXQtY29udGVudCAudWktc3RhdGUtZGVmYXVsdCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUZBRkE7IH1cblxuLnVpLXN0YXRlLWhpZ2hsaWdodCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZWI0MDggIWltcG9ydGFudDsgfVxuXG4jY2JveFdyYXBwZXIge1xuICBib3JkZXItcmFkaXVzOiAwOyB9XG5cbi5maWVsZC0tbmFtZS11c2VyLXBpY3R1cmUgaW1nIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbmgyLnN0eWxlZ3VpZGUge1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzUwN2IyYztcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIGZvbnQtZmFtaWx5OiBcIkFwZXggUm91bmRlZFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7IH1cblxuLmNvbnRleHR1YWwtbGlua3Mtd3JhcHBlciBhLmNvbnRleHR1YWwtbGlua3MtdHJpZ2dlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuXG4uY29udGV4dHVhbC1saW5rcy13cmFwcGVyIHVsLmNvbnRleHR1YWwtbGlua3MgbGkgYSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuXG5uYXYudGFicyB7XG4gIG1hcmdpbi10b3A6IC41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gIG5hdi50YWJzIGxpIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIG5hdi50YWJzIGxpIGEge1xuICAgICAgYm90dG9tLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICAgICAgY29sb3I6ICMyYTQxNGY7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogLjZyZW07XG4gICAgICBwYWRkaW5nOiAuMnJlbSAuNmVtO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgICAgYm9yZGVyOiAycHggc29saWQgIzJlMzIzZDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG4gICAgICBuYXYudGFicyBsaSBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzJlMzIzZDtcbiAgICAgICAgYm90dG9tLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICAgICAgICBjb2xvcjogd2hpdGU7IH1cbiAgbmF2LnRhYnMgbGkuaXMtYWN0aXZlIGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZTMyM2Q7XG4gICAgY29sb3I6IHdoaXRlOyB9XG4gIG5hdi50YWJzIHVsLnRhYnMucHJpbWFyeSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW07IH1cbiAgICBAbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgICBuYXYudGFicyB1bC50YWJzLnByaW1hcnkge1xuICAgICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuICBuYXYudGFicyB1bC50YWJzLnNlY29uZGFyeSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgIG1hcmdpbi10b3A6IC41cmVtOyB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgICAgbmF2LnRhYnMgdWwudGFicy5zZWNvbmRhcnkge1xuICAgICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuICAgIG5hdi50YWJzIHVsLnRhYnMuc2Vjb25kYXJ5IGEge1xuICAgICAgZm9udC1zaXplOiAuNnJlbTtcbiAgICAgIHBhZGRpbmc6IC4xcmVtIC40O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuXG4uZmlsZS0tZ2VuZXJhbCxcbi5maWxlLS1hcHBsaWNhdGlvbi1vY3RldC1zdHJlYW0ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtZXhlLnN2Zyk7IH1cblxuLmZpbGUtLXBhY2thZ2UteC1nZW5lcmljIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWdlbmVyaWMuc3ZnKTsgfVxuXG4uZmlsZS0teC1vZmZpY2Utc3ByZWFkc2hlZXQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUteGxzLnN2Zyk7IH1cblxuLmZpbGUtLXgtb2ZmaWNlLWRvY3VtZW50IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWRvYy5zdmcpOyB9XG5cbi5maWxlLS14LW9mZmljZS1wcmVzZW50YXRpb24ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtcHB0LnN2Zyk7IH1cblxuLmZpbGUtLXRleHQteC1zY3JpcHQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtanMuc3ZnKTsgfVxuXG4uZmlsZS0tdGV4dC1odG1sIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWh0bWwuc3ZnKTsgfVxuXG4uZmlsZS0tdGV4dC1wbGFpbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvdGV4dC1wbGFpbi5wbmcpOyB9XG5cbi5maWxlLS1hcHBsaWNhdGlvbi1wZGYge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtcGRmLnN2Zyk7IH1cblxuLmZpbGUtLWFwcGxpY2F0aW9uLXgtZXhlY3V0YWJsZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1leGUuc3ZnKTsgfVxuXG4uZmlsZS0tYXVkaW8ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtbXAzLnN2Zyk7IH1cblxuLmZpbGUtLXZpZGVvIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLW1wNC5zdmcpOyB9XG5cbi5maWxlLS10ZXh0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLXR4dC5zdmcpOyB9XG5cbi5maWxlLS1pbWFnZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1qcGcuc3ZnKTsgfVxuXG4uZmlsZS0tbWltZS1hcHBsaWNhdGlvbi1wb3N0c2NyaXB0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWVwcy5zdmcpOyB9XG5cbi5maWxlIHtcbiAgYmFja2dyb3VuZC1zaXplOiAxNnB4IGF1dG87XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgdG9wOyB9XG5cbmFbZGF0YS1lbnRpdHktdHlwZT1cImZpbGVcIl0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG4gIGFbZGF0YS1lbnRpdHktdHlwZT1cImZpbGVcIl06YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyAnO1xuICAgIHdpZHRoOiAuNzVyZW07XG4gICAgaGVpZ2h0OiAxcmVtO1xuICAgIGxlZnQ6IC0uOXJlbTtcbiAgICB0b3A6IC4xMnJlbTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2F0dGFjaC0yLnN2Zyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDFyZW0gMXJlbTsgfVxuIiwiXG4vLy8gU3RyaWN0IG5vcm1hbGl6ZVxuLy8vIEB0eXBlIEJvb2xlYW4gW2ZhbHNlXSAtIFNldCB0byB0cnVlIGZvciBzdHJpY3Qgbm9ybWFsaXplIG91dHB1dC5cbiRzdHJpY3Qtbm9ybWFsaXplOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8vIEZvbnQtc2l6ZSBiYXNlbGluZVxuLy8vIEB0eXBlIExlbmd0aCBbMTZweF1cbiRiYXNlLWZvbnQtc2l6ZTogMTZweCAhZGVmYXVsdDtcblxuLy8vIExpbmUtaGVpZ2h0IGJhc2VsaW5lXG4vLy8gQHR5cGUgTGVuZ3RoIFsyNHB4XVxuJGJhc2UtbGluZS1oZWlnaHQ6IDI0cHggIWRlZmF1bHQ7XG5cbi8vLyBIMSBoZWFkbGluZSBzaXplXG4vLy8gQHR5cGUgTGVuZ3RoIFsyICogMTZweF1cbiRoMS1mb250LXNpemU6IDIgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG5cbi8vLyBSaHl0aG0gdW5pdFxuLy8vIEB0eXBlIFN0cmluZyBbZW1dIC0gU3VwcG9ydGVkIHZhbHVlczogcHgsIGVtLCByZW0uXG4kcmh5dGhtLXVuaXQ6ICdlbScgIWRlZmF1bHQ7XG5cbi8vLyBGb250LWZhbWlseSBiYXNlbGluZVxuLy8vIEB0eXBlIE1hcCBbc2Fucy1zZXJpZl1cbiRiYXNlLWZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmICFkZWZhdWx0O1xuXG4vLy8gU3VwcG9ydGVkIEJyb3dzZXIgdmVyc2lvbnNcbi8vLyBAdHlwZSBNYXBcbiRicm93c2VyLW1pbi12ZXJzaW9uOiAoXG4gICdjaHJvbWUnOiAgbnVsbCxcbiAgJ2ZpcmVmb3gnOiBudWxsLFxuICAnaWUnOiAgICAgIDgsXG4gICdzYWZhcmknOiAgNixcbiAgJ29wZXJhJzogICBudWxsXG4pICFkZWZhdWx0O1xuXG5cbi8vIEFzc3VyZSBubyB2YXJpYWJsZXMgZ2V0IG92ZXJyaWRkZW4gaWYgc3RyaWN0IGlzIG9uXG4kbm9ybWFsaXplLWJhc2UtZm9udC1zaXplOiBpZigkc3RyaWN0LW5vcm1hbGl6ZSwgMTZweCwgJGJhc2UtZm9udC1zaXplKTtcbiRub3JtYWxpemUtYmFzZS1saW5lLWhlaWdodDogaWYoJHN0cmljdC1ub3JtYWxpemUsIDI0cHgsICRiYXNlLWxpbmUtaGVpZ2h0KTtcbiRub3JtYWxpemUtaDEtZm9udC1zaXplOiBpZigkc3RyaWN0LW5vcm1hbGl6ZSwgMiAqICRiYXNlLWZvbnQtc2l6ZSwgJGgxLWZvbnQtc2l6ZSk7XG4kbm9ybWFsaXplLXJoeXRobS11bml0OiBpZigkc3RyaWN0LW5vcm1hbGl6ZSwgJ2VtJywgJHJoeXRobS11bml0KTtcbiRub3JtYWxpemUtYmFzZS1mb250LWZhbWlseTogaWYoJHN0cmljdC1ub3JtYWxpemUsIHNhbnMtc2VyaWYsICRiYXNlLWZvbnQtZmFtaWx5KTtcblxuLy8vIE5vcm1hbGl6ZSBMZWdhY3kgQnJvd3NlciBTdXBwb3J0IGZ1bmN0aW9uXG4vLy9cbi8vLyBAcmVxdWlyZXMge3ZhcmlhYmxlfSBicm93c2VyXG4vLy8gQHJlcXVpcmVzIHt2YXJpYWJsZX0gdmVyc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRicm93c2VyIC0gQSB2YWxpZCBicm93c2VyIG5hbWUgZnJvbSAkYnJvd3Nlci1taW5pbXVtLXZlcnNpb25zLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkdmVyc2lvbiAtIEEgYnJvd3NlciB2ZXJzaW9uLlxuLy8vXG4vLy8gQHJldHVybiB7Qm9vbH0gLSBJZiBicm93c2VyIGlzIG51bGwgb3IgdmFsaWQgcmV0dXJucyB0cnVlLlxuQGZ1bmN0aW9uIG5vcm1hbGl6ZS1icm93c2VyLXN1cHBvcnQoJGJyb3dzZXIsICR2ZXJzaW9uKSB7XG4gIC8vIEFsbG93cyB0aGUgQ29tcGFzcyBmdW5jdGlvbiB0byB0YWtlIG92ZXIgaWYgaW5zdGFsbGVkLlxuICBAaWYgbWFwLWdldCgkYnJvd3Nlci1taW4tdmVyc2lvbiwgJGJyb3dzZXIpIHtcbiAgICAkc3VwcG9ydGVkLXZlcnNpb246IG1hcC1nZXQoJGJyb3dzZXItbWluLXZlcnNpb24sICRicm93c2VyKTtcbiAgICAvLyBQYXNzIGlmIGJyb3dzZXIgaXMgc3VwcG9ydGVkIG9yIHN0cmljdC1ub3JtYWxpemUgaXMgb25cbiAgICBAaWYgJHN0cmljdC1ub3JtYWxpemUgb3IgJHN1cHBvcnRlZC12ZXJzaW9uIDw9ICR2ZXJzaW9uIHtcbiAgICAgIEByZXR1cm4gdHJ1ZTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIC8vIEZhaWwgaWYgYnJvd3NlciBpcyB1bnN1cHBvcnRlZFxuICAgICAgQHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuICAvLyBQYXNzIGlmIGJyb3dzZXIgaXMgbnVsbFxuICBAcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiogICAgdXNlciB6b29tLlxuKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogJG5vcm1hbGl6ZS1iYXNlLWZvbnQtZmFtaWx5OyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4qIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4qIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4qIGFuZCBGaXJlZm94LlxuKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4qL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBAaWYgbm9ybWFsaXplLWJyb3dzZXItc3VwcG9ydCgnaWUnLCA5KSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIH1cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG5AaWYgbm9ybWFsaXplLWJyb3dzZXItc3VwcG9ydCgnaWUnLCAxMCkge1xuICAvKipcbiAgICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICAgKi9cblxuICBbaGlkZGVuXSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vKipcbiogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQGlmIG5vcm1hbGl6ZS1icm93c2VyLXN1cHBvcnQoJ2llJywgMTApIHtcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICAgKi9cblxuICBhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxufVxuXG4vKipcbiogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4qL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4qIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4qIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG5cbmIsXG5zdHJvbmcge1xuICAvL2ZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4qL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogaWYoJG5vcm1hbGl6ZS1yaHl0aG0tdW5pdCA9PSAncHgnLCAkaDEtZm9udC1zaXplLCAjeygkbm9ybWFsaXplLWgxLWZvbnQtc2l6ZSAvICRub3JtYWxpemUtYmFzZS1mb250LXNpemUpfSN7JG5vcm1hbGl6ZS1yaHl0aG0tdW5pdH0pO1xuICBtYXJnaW46IGlmKCRub3JtYWxpemUtcmh5dGhtLXVuaXQgPT0gJ3B4JywgJGJhc2UtbGluZS1oZWlnaHQsICN7KCRub3JtYWxpemUtYmFzZS1mb250LXNpemUgLyAkbm9ybWFsaXplLWJhc2UtbGluZS1oZWlnaHQpfSN7JG5vcm1hbGl6ZS1yaHl0aG0tdW5pdH0pIDA7XG59XG5cbkBpZiBub3JtYWxpemUtYnJvd3Nlci1zdXBwb3J0KCdpZScsIDkpIHtcbiAgLyoqXG4gICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gICAqL1xuXG4gIG1hcmsge1xuICAgIGJhY2tncm91bmQ6ICNmZjA7XG4gICAgY29sb3I6ICMwMDA7XG4gIH1cbn1cblxuLyoqXG4qIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4qIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpZiBub3JtYWxpemUtYnJvd3Nlci1zdXBwb3J0KCdpZScsIDEwKSB7XG4gIC8qKlxuICAgKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAgICovXG5cbiAgaW1nIHtcbiAgICBib3JkZXI6IDA7XG4gIH1cbn1cblxuQGlmIG5vcm1hbGl6ZS1icm93c2VyLXN1cHBvcnQoJ2llJywgMTEpIHtcbiAgLyoqXG4gICAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICAgKi9cblxuICBzdmc6bm90KDpyb290KSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AaWYgbm9ybWFsaXplLWJyb3dzZXItc3VwcG9ydCgnaWUnLCA5KSBvciBub3JtYWxpemUtYnJvd3Nlci1zdXBwb3J0KCdzYWZhcmknLCA2KSB7XG4gIC8qKlxuICAgKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAgICovXG5cbiAgZmlndXJlIHtcbiAgICBtYXJnaW46IDFlbSA0MHB4O1xuICB9XG59XG5cbi8qKlxuKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4qL1xuXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4qIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4qIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiovXG5cbi8qKlxuKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4qICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbkBpZiBub3JtYWxpemUtYnJvd3Nlci1zdXBwb3J0KCdpZScsIDExKSB7XG4gIC8qKlxuICAgKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAgICovXG5cbiAgYnV0dG9uIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgfVxufVxuXG4vKipcbiogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4qL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4qIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4qICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4qIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4qICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT0nYnV0dG9uJ10sIC8qIDEgKi9cbmlucHV0W3R5cGU9J3Jlc2V0J10sXG5pbnB1dFt0eXBlPSdzdWJtaXQnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4qIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuKiB0aGUgVUEgc3R5bGVzaGVldC5cbiovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuQGlmIG5vcm1hbGl6ZS1icm93c2VyLXN1cHBvcnQoJ2llJywgMTApIHtcbiAgLyoqXG4gICAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAgICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAgICpcbiAgICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgICovXG5cbiAgaW5wdXRbdHlwZT0nY2hlY2tib3gnXSxcbiAgaW5wdXRbdHlwZT0ncmFkaW8nXSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICAgIHBhZGRpbmc6IDA7IC8qIDIgKi9cbiAgfVxufVxuXG4vKipcbiogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuKi9cblxuaW5wdXRbdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4qIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4qICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuKi9cblxuaW5wdXRbdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4qIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuKi9cblxuaW5wdXRbdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPSdzZWFyY2gnXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4qIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4qL1xuXG5sZWdlbmQge1xuICBAaWYgbm9ybWFsaXplLWJyb3dzZXItc3VwcG9ydCgnaWUnLCAxMSkge1xuICAgIGJvcmRlcjogMDsgLyogMSAqL1xuICB9XG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuQGlmIG5vcm1hbGl6ZS1icm93c2VyLXN1cHBvcnQoJ2llJywgMTEpIHtcbiAgLyoqXG4gICAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gICAqL1xuXG4gIHRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxufVxuXG4vKipcbiogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4qIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuIiwiLy8vIENsZWFyZml4IGhhY2sgZm9yIHdyYXBwaW5nIGVsZW1lbnRzIGFyb3VuZCB0aGVpciBmbG9hdGVkIGNoaWxkcmVuXG4vLy9cbi8vLyBAZ3JvdXAgcGxhY2Vob2xkZXJzXG4vLy9cbi8vLyBAZXhhbXBsZVxuLy8vIFx0QGV4dGVuZCAlY2Y7XG4vLy9cblxuLy8gY2xlYXJmaXhcbiVjZiB7XG4gIEBpbmNsdWRlIGNmO1xufVxuXG4lYW5pbWF0ZSB7XG4gIHRyYW5zaXRpb246IGFsbCAuMnM7XG59XG5cbiVleGFtcGxlLWV4dGVuZCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIEBleHRlbmQgJWFuaW1hdGU7XG59IiwiXG5cbi8vID09PT09PT09PT1cbi8vIEFERC1DT05URVhUXG4vLyAtLS0tLVxuLy8gQWRkcyBjdXJyZW50IGNvbnRleHQgdG8gdGhlICRjb250ZXh0cyBtYXAgdGhhdCBpcyB1c2VkXG4vLyB0byBzdG9yZSBhbGwgY29udGV4dHMgZm9yIGFsbCBzdXN5IGl0ZW1zIGZvciBpdHMgY2hpbGRyZW5cbi8vXG4vLyBVU0FHRTpcbi8vIC0tLS0tXG4vLyBJZiBwYXJlbnQgY29udGV4dCB3YXMgcHJldmlvdXNseSBkZWNsYXJlZCxcbi8vIHVzZSB3aXRoIGVpdGhlciBuZXN0ZWQgb3Igc3VzeS1icmVha3BvaW50OlxuLy9cbi8vIC5uby1wYXJlbnQge1xuLy8gICBAaW5jbHVkZSBzdXN5LWJyZWFrcG9pbnQoNjAwcHgsIDkpIHtcbi8vICAgICBAaW5jbHVkZSBhZGQtY29udGV4dChjb250ZW50LCBtZWQsIDYpXG4vLyAgIH1cbi8vIH1cbi8vXG4vLyBJZiBwYXJlbnQgY29udGV4dCB3YXMgZGVjbGFyZWQgcHJldmlvdXNseSxcbi8vIHVzZSB3aXRoIGdldC1jb250ZXh0OlxuLy9cbi8vIC5oYXMtcGFyZW50IHtcbi8vICAgQGluY2x1ZGUgZ2V0LWNvbnRleHQoY29udGVudCwgbWVkKSB7XG4vLyAgICAgQGluY2x1ZGUgYWRkLWNvbnRleHQoZ2FsbGVyeSwgbWVkLCAzKTtcbi8vICAgfVxuLy8gfVxuLy8gPT09PT09PT09PVxuXG5cbi8vLyBAYXV0aG9yIFZvdmEgU2tva1xuLy8vIEBjb250ZW50IFN0eWxlcyB3aGljaCBnbyBpbnNpZGUgb2YgY2hvc2VuIGJyZWFrcG9pbnRcbi8vLyBAdGhyb3cgXCJJbnZhbGlkIGJyZWFrcG9pbnQgYCN7JG5hbWV9YFwiXG4vLy8gQGV4YW1wbGVcbi8vLyAgQGluY2x1ZGUgYnJlYWtwb2ludChzbWFsbCk7XG4vLy8gQG91dHB1dFxuLy8vIGBAbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcbi8vL1x0XHQvLyBTdHlsZXNcbi8vLyB9YFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJGJyZWFrcG9pbnRzXG5cblxuXG5AbWl4aW4gYWRkLWNvbnRleHQoJGxheW91dCwgJGJyZWFrcG9pbnQsICRzcGFuLCAkbG9jYXRpb246IG51bGwpIHtcbiAgQGlmIHR5cGUtb2YoJGxvY2F0aW9uKSA9PSBcInN0cmluZ1wiIHtcbiAgICAkY29udGV4dHM6IF9zdXN5LWRlZXAtc2V0KCRjb250ZXh0cywgJGxheW91dCwgJGJyZWFrcG9pbnQsICRzcGFuIG9mIHN1c3ktZ2V0KGNvbHVtbnMpIHN1c3ktZ2V0KGd1dHRlcikgJGxvY2F0aW9uKSAhZ2xvYmFsO1xuICB9IEBlbHNlIHtcbiAgICAkY29udGV4dHM6IF9zdXN5LWRlZXAtc2V0KCRjb250ZXh0cywgJGxheW91dCwgJGJyZWFrcG9pbnQsICRzcGFuIG9mIHN1c3ktZ2V0KGNvbHVtbnMpIHN1c3ktZ2V0KGd1dHRlcikgYXQgJGxvY2F0aW9uKSAhZ2xvYmFsO1xuICB9XG59XG5cbi8vID09PT09PT09PT1cbi8vIEdFVC1DT05URVhUXG4vLyAtLS0tLVxuLy8gR2V0cyB0aGUgY29udGV4dCBmcm9tIHRoZSAkY29udGV4dHMgbWFwIGFuZCBpbmNsdWRlIGFcbi8vIG5lc3RlZCB3cmFwcGVyIHRvIHVzZSB3aXRoIHRoZSBjb250ZW50cyBvZiB0aGUgY29udGV4dC5cbi8vXG4vLyBVc2FnZTpcbi8vIC0tLS0tLVxuLy9cbi8vIC50ZXN0IHtcbi8vICAgQGluY2x1ZGUgYnJlYWtwb2ludChsYXJnZSkge1xuLy8gICAgICBAaW5jbHVkZSBnZXQtY29udGV4dChjb250ZW50LGxhcmdlKSB7XG4vLyAgICAgICAgQGluY2x1ZGUgc3Bhbig2KTtcbi8vICAgICAgfVxuLy8gICB9XG4vLyB9XG4vL1xuLy8gPT09PT09PT09PVxuQG1peGluIGdldC1jb250ZXh0KCRrZXlzLi4uKSB7XG4gICRjb250ZXh0OiBnZXQtY29udGV4dCgka2V5cy4uLik7XG4gIEBpbmNsdWRlIG5lc3RlZCgkY29udGV4dCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cblxuLy8vIENsZWFyZml4IGZvciBJRTggJiBhYm92ZVxuLy8vIEBzb3VyY2UgaHR0cDovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL2Nzcy9jbGVhci1maXgvXG5AbWl4aW4gY2Yge1xuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cblxuLy8vIEltYWdlIHJlcGxhY2VtZW50IG1peGluXG4vLy8gUmVwbGFjZXMgdGV4dCB3aXRoIGJhY2tncm91bmQgaW1hZ2VzLlxuLy8vIFJlcXVpcmVzIGlubGluZS1ibG9jayBvciBibG9jayBkaXNwbGF5XG4vLy8gQHNvdXJjZSBodHRwOi8vd3d3LnplbGRtYW4uY29tLzIwMTIvMDMvMDEvcmVwbGFjaW5nLXRoZS05OTk5cHgtaGFjay1uZXctaW1hZ2UtcmVwbGFjZW1lbnQvXG5AbWl4aW4gaGlkZS10ZXh0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1pbmRlbnQ6IDEwMCU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cblxuLy8vIE1ha2VzIGVsZW1lbnQgaW52aXNpYmxlIVxuLy8vICpSZW1haW5zIHZpc2libGUgZm9yIGFjY2Vzc2liaWxpdHkqXG4vLy8gQHNvdXJjZSBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XG5AbWl4aW4gaXMtaW52aXNpYmxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBtYXJnaW46IC0xcHg7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXI6IDA7XG59XG5cblxuXG4vLy8gVHVybnMgb2ZmIHRoZSBlbGVtZW50LWludmlzaWJsZSBlZmZlY3QuXG5AbWl4aW4gaXMtdmlzaWJsZSB7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIGNsaXA6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IGF1dG87XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG5cblxuLy8vIENoYW5nZXMgaW5wdXQgUGxhY2Vob2xkZXIgY29sb3JcbkBtaXhpbiBwbGFjZWhvbGRlcigkY29sb3IpIHtcbiAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgfVxuICAmOi1tb3otcGxhY2Vob2xkZXIge1xuICAgIC8qIEZpcmVmb3ggMTgtICovXG4gICAgY29sb3I6ICRjb2xvcjtcbiAgfVxuICAmOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICAvKiBGaXJlZm94IDE5KyAqL1xuICAgIGNvbG9yOiAkY29sb3I7XG4gIH1cbiAgJjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAkY29sb3I7XG4gIH1cbn1cblxuXG4vLy8gQ2hhbmdlcyBiYWNrZ3JvdW5kIGNvbG9yIGFuZCB0ZXh0IGNvbG9yIHdoZW4gdGV4dCBpcyBzZWxlY3RlZFxuQG1peGluIHNlbGVjdGlvbigkYmdDb2xvciwgJHRleHRDb2xvcikge1xuICAmOjotbW96LXNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZDogJGJnQ29sb3I7XG4gICAgY29sb3I6ICR0ZXh0Q29sb3I7XG4gIH1cbiAgJjo6c2VsZWN0aW9uIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmdDb2xvcjtcbiAgICBjb2xvcjogJHRleHRDb2xvcjtcbiAgfVxufVxuXG5cbi8vL1NoYXBlcyBtaXhpbjogY2lyY2xlXG5AbWl4aW4gY2lyY2xlKCR3aWR0aCkge1xuICB3aWR0aDogJHdpZHRoO1xuICBoZWlnaHQ6ICR3aWR0aDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbn1cblxuLy8vU2hhcGVzIG1peGluOiB0cmlhbmdsZVxuQG1peGluIHRyaWFuZ2xlKCRkaXIsICRzaXplLCAkY29sb3IpIHtcbiAgYm9yZGVyOiAkc2l6ZSB0cmFuc3BhcmVudCBzb2xpZDtcbiAgQGlmICRkaXIgPT0gXCJ0b3BcIiBvciAkZGlyID09IFwidXBcIiB7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJGNvbG9yO1xuICB9IEBlbHNlIGlmICRkaXIgPT0gXCJyaWdodFwiIG9yICRkaXIgPT0gXCJhZnRlclwiIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogJGNvbG9yO1xuICB9IEBlbHNlIGlmICRkaXIgPT0gXCJib3R0b21cIiBvciAkZGlyID09IFwiZG93blwiIHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiAkY29sb3I7XG4gIH0gQGVsc2UgaWYgJGRpciA9PSBcImxlZnRcIiBvciAkZGlyID09IFwiYmVmb3JlXCIge1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogJGNvbG9yO1xuICB9XG59XG5cblxuLy8vIEtlZXAgdGhlIGZvb3RlciBhdCB0aGUgYm90dG9tIG9mIHRoZSBzaXRlXG4vLy8gQGV4YW1wbGVcbi8vLyAgIEBpbmNsdWRlIHN0aWNreS1mb290ZXIoMjBlbSwgXCIjc2l0ZVwiLCBcIiNwdXNoXCIsIFwiI2Zvb3RlclwiKTtcbi8vLyBAc291cmNlIGh0dHA6Ly9jb2RlcGVuLmlvL3pvZXJvb25leS9wZW4vdnRkRndcbi8vLyBAYXV0aG9yIFpvZSBSb29uZXlcbkBtaXhpbiBzdGlja3ktZm9vdGVyKCRmb290ZXItaGVpZ2h0LCAkd3JhcHBlci1zZWxlY3RvcjogdW5xdW90ZShcIiNzaXRlXCIpLCAkY29udGFpbmVyLXNlbGVjdG9yOiB1bnF1b3RlKFwiI3dyYXAtYWxsXCIpLCAkZm9vdGVyLXNlbGVjdG9yOiB1bnF1b3RlKFwiI2Zvb3RlclwiKSkge1xuICBodG1sLCBib2R5IHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbiAgYm9keSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgI3skd3JhcHBlci1zZWxlY3Rvcn0ge1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IC0kZm9vdGVyLWhlaWdodDtcbiAgICAjeyRjb250YWluZXItc2VsZWN0b3J9IHtcbiAgICAgIHBhZGRpbmc6IDAgMCAkZm9vdGVyLWhlaWdodCAwO1xuICAgIH1cbiAgfVxuICAjeyRmb290ZXItc2VsZWN0b3J9IHtcbiAgICBoZWlnaHQ6ICRmb290ZXItaGVpZ2h0O1xuICB9XG59XG4iLCIvL3N5c3RlbSBtZXNzYWdlcyBzdHlsZXNcblxuLnJlZ2lvbi1wcmVmaXgge1xuICBtYXJnaW4tdG9wOiAuNXJlbTtcbn1cbi5tZXNzYWdlcyB7XG4gIGNvbG9yOiBwYWxldHRlKHRleHQsIGRhcmspO1xuICBmb250LXNpemU6IC44NzVlbTtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaGFkb3c6bm9uZTtcbiAgLy8gcGFkZGluZzogMnJlbSAhaW1wb3J0YW50O1xuXG4gIEBleHRlbmQgJWNmO1xuXG4gIHVsLm1lc3NhZ2VzX19saXN0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG5cbiAgICBsaTpub3QoOmZpcnN0LWNoaWxkKXtcbiAgICAgIG1hcmdpbi10b3A6IC41cmVtO1xuICAgIH1cblxuXG4gIH1cblxuXG4gICY6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4xKTtcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgbWFyZ2luLWxlZnQ6IC0xLjVyZW07XG4gICAgbWFyZ2luLXRvcDogLS4zZW07XG4gICAgcGFkZGluZy10b3A6IC4zcmVtO1xuICAgIHNwZWFrOiBub25lO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMmVtO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCFpbXBvcnRhbnQ7XG4gIH1cblxuICBoMiB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cblxuXG4gICYubWVzc2FnZXMtLXN0YXR1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShtZXNzYWdlcywgb2spO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCLinJRcIjtcbiAgICB9XG4gIH1cblxuICAmLm1lc3NhZ2VzLS13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKG1lc3NhZ2VzLCB3YXJuaW5nKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGJvcmRlcjogMDtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiIVwiO1xuICAgICAgZm9udC1mYW1pbHk6IEFyaWFsIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxuICAmLm1lc3NhZ2VzLS1lcnJvciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShtZXNzYWdlcywgZXJyb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgYm9yZGVyOiAwO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCIhXCI7XG4gICAgICBmb250LWZhbWlseTogQXJpYWwhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxufVxuIiwiLy8vIENvbmZpZ3VyYXRpb24gY29sb3VycyBtYXBcbi8vLyBAYXV0aG9yIEFkcmlhbiBSeWxza2lcbi8vLyBAZ3JvdXAgbWFwXG4vLy8gQHR5cGUgbWFwXG4vLy8gQGV4YW1wbGVcbi8vLyBcdC50ZXN0IHtcbi8vLyAgIFx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShnbG9iYWwsIHdoaXRlKTtcbi8vLyBcdH1cblxuJHBhbGV0dGVzOiAgICAgICAgICAgICAgICAgICAoXG4gICAgICAgIGdsb2JhbDogICAgICAgICAgICAgIChcbiAgICAgICAgICAgICAgICBncmV5LWRhcms6ICAgIzIyMjIyMixcbiAgICAgICAgICAgICAgICBncmV5LWJpczogICAgIzY2NjY2NixcbiAgICAgICAgICAgICAgICBncmV5LW1lZGl1bTogI0NDQ0NDQyxcbiAgICAgICAgICAgICAgICBncmV5LWxpZ2h0OiAgI0VFRUVFRSxcbiAgICAgICAgICAgICAgICBncmV5LXBhbGU6ICAgI0ZBRkFGQSxcbiAgICAgICAgICAgICAgICBncmV5LWJnOiAgICAgI0Y3RjdGNSxcbiAgICAgICAgICAgICAgICB3aGl0ZTogICAgICAgI0ZGRkZGRixcbiAgICAgICAgKSxcblxuICAgICAgICBibHVlOiAgICAgICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgZGFyazogICAgICAgICMxOTFGM0UsXG4gICAgICAgICAgICAgICAgbWVkaXVtOiAgICAgICM0MzY5ODIsXG4gICAgICAgICAgICAgICAgbGlnaHQ6ICAgICAgICMyNjZmYTMsXG4gICAgICAgICAgICAgICAgbGlnaHRlc3Q6ICAgICNBNUI5Q0MsXG4gICAgICAgICAgICAgICAgcGFsZTogICAgICAgICNGRkZGRkYsXG4gICAgICAgICAgICAgICAgYmc6ICAgICAgICAgICNGRkZGRkYsXG4gICAgICAgICksXG5cbiAgICAgICAgZ3JlZW46ICAgICAgICAgICAgICAgKFxuICAgICAgICAgICAgICAgIGRhcms6ICAgICAgICAjNTA3YjJjLFxuICAgICAgICAgICAgICAgIG1lZGl1bTogICAgICAjQUNENThBLFxuICAgICAgICAgICAgICAgIGxpZ2h0OiAgICAgICAjREFFQUNBLFxuICAgICAgICAgICAgICAgIGxpZ2h0ZXN0OiAgICAjRjNGNkVELFxuICAgICAgICAgICAgICAgIHBhbGU6ICAgICAgICAjRkZGRkZGLFxuICAgICAgICAgICAgICAgIGJnOiAgICAgICAgICAjRkZGRkZGLFxuICAgICAgICApLFxuXG4gICAgICAgIG9yYW5nZTogICAgICAgICAgICAgIChcbiAgICAgICAgICAgICAgICBkYXJrOiAgICAgICAgI0Y5QTIzRixcbiAgICAgICAgICAgICAgICBtZWRpdW06ICAgICAgI0ZDQjY2QixcbiAgICAgICAgICAgICAgICBsaWdodDogICAgICAgI0ZFQ0I5NCxcbiAgICAgICAgICAgICAgICBsaWdodGVzdDogICAgI0ZGRUJENixcbiAgICAgICAgICAgICAgICBwYWxlOiAgICAgICAgI0ZGRkZGRixcbiAgICAgICAgICAgICAgICBiZzogICAgICAgICAgI0ZGRkZGRixcbiAgICAgICAgKSxcblxuICAgICAgICBpbmRpY2F0b3I6ICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgdmlvbGV0OiAgICAgICM4ODRGQTMsXG4gICAgICAgICAgICAgICAgYmx1ZTogICAgICAgICM0Mjc1QkMsXG4gICAgICAgICAgICAgICAgcmVkOiAgICAgICAgICNBODJEMUUsXG4gICAgICAgICAgICAgICAgZ3JlZW46ICAgICAgICM1MDgxM0YsXG4gICAgICAgICAgICAgICAgYmc6ICAgICAgICAgICNlZWVlZWUsXG4gICAgICAgICksXG5cblxuICAgICAgICB0YWJzOiAgICAgICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgYmc6ICAgICAgICAgICMyZTMyM2QsXG4gICAgICAgICAgICAgICAgbm9ybWFsOiAgICAgICMyYTQxNGYsXG4gICAgICAgICAgICAgICAgaG92ZXI6ICAgICAgICM0NTQwNWUsXG4gICAgICAgICAgICAgICAgYWN0aXZlOiAgICAgICMyYTQxNGYsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICNkYmRiZGIsXG4gICAgICAgICksXG5cbiAgICAgICAgZm9ybXM6ICAgICAgICAgICAgICAgKFxuICAgICAgICAgICAgICAgIGJnOiAgICAgICAgICAjMmUzMjNkLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogICAgICAjY2RjZGNkLFxuICAgICAgICAgICAgICAgIGZvY3VzOiAgICAgICAjZWQxYzJlLFxuICAgICAgICAgICAgICAgIGVycm9yOiAgICAgICAjZWQxYzJlLFxuICAgICAgICApLFxuXG4gICAgICAgIHRleHQ6ICAgICAgICAgICAgICAgIChcbiAgICAgICAgICAgICAgICBsaWdodDogICAgICAgIzYzNzM4MSxcbiAgICAgICAgICAgICAgICBtZWRpdW06ICAgICAgIzQ1NEY1QixcbiAgICAgICAgICAgICAgICBkYXJrOiAgICAgICAgIzIxMkIzNSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogIzQ1NEY1QixcbiAgICAgICAgKSxcblxuICAgICAgICBtZXNzYWdlczogICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgb2s6ICAgICAgICAgIHJnYmEoOTIsIDE4NywgNzAsIC41KSxcbiAgICAgICAgICAgICAgICBlcnJvcjogICAgICAgcmdiYSgyMzcsIDI4LCA0NiwgLjUpLFxuICAgICAgICAgICAgICAgIHdhcm5pbmc6ICAgICByZ2JhKDI1MywgMTgzLCAzOSwgLjUpLFxuICAgICAgICApLFxuXG4gICAgICAgIGJyYW5kczogICAgICAgICAgICAgIChcbiAgICAgICAgICAgICAgICB0d2l0dGVyOiAgICAgIzU1QUNFRSxcbiAgICAgICAgICAgICAgICBmYWNlYm9vazogICAgIzNCNTk5OCxcbiAgICAgICAgICAgICAgICBnb29nbGU6ICAgICAgI0RENEIzOSxcbiAgICAgICAgICAgICAgICBsaW5rZWRpbjogICAgIzA5NzZCNCxcbiAgICAgICAgKSxcbik7XG5cbi8vL1RBQlNcbi8vL0NvbG91cnMgZm9yIHByaW1hcnkgdGFic1xuXG4kdGFicy1wcmltYXJ5LS1iYWNncm91bmRfX25vcm1hbDogICBvcmFuZ2U7XG4kdGFicy1wcmltYXJ5LS1ib3JkZXJfX25vcm1hbDogICAgICBncmVlbjtcblxuLy8vQ29sb3VycyBmb3Igc2Vjb25kYXJ5IHRhYnNcblxuJHRhYnMtc2Vjb25kYXJ5LS1ib3JkZXI6ICAgICAgIHJlZDtcbiIsIlxuLm5vZGUtcHJldmlldy1jb250YWluZXIge1xuXG4gIC5ub2RlLXByZXZpZXctYmFja2xpbmt7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XG4gICAgcGFkZGluZzogLjVyZW07XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAuNnJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogLjAyMjNlbTtcbiAgICBAZXh0ZW5kICVhbmltYXRlO1xuXG4gICAgJjpob3ZlcntcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkYmx1ZSwgMiUpO1xuICAgIH1cbiAgfVxuXG4gIC5mb3JtLWl0ZW0tdmlldy1tb2Rle1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgfVxufVxuXG4iLCIvLy8gU2l0ZSB2YXJpYWJsZXNcblxuJGxldHRlci1zcGFjaW5nOiAycHg7XG5cbiRmb250LXByaW1hcnk6ICdBcGV4IE5ldycsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG5cbiRmb250LXNlY29uZGFyeTogJ0FwZXggUm91bmRlZCcsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG5cbiRjb250ZW50LW1heC13aWR0aDogMzhlbTsgLy8gQmV0d2VlbiAyMi41IGFuZCAzNy41ZW1cblxuJHNpZGViYXItYmxvY2tzLWhlYWRlcjogLjhyZW07XG5cbi8vLS0tLVxuXG4kZm9udC1mYW1pbHk6ICdSdWJpaycsICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4kY29sb3IxOiBoc2xhKDMzNCUsIDEwMCUsIDMlLCAxKTtcbiRjb2xvcjI6IGhzbGEoMjA1JSwgNzElLCAxOCUsIDEpO1xuJGNvbG9yMzogaHNsYSg0OCUsIDkzJSwgNDUlLCAxKTtcbiRjb2xvcjQ6IGhzbGEoMTc0JSwgOSUsIDIyJSwgMSk7XG4kY29sb3I1OiBoc2xhKDMzMCUsIDIlLCAxOCUsIDEpO1xuJGJsYWNrOiByZ2JhKDE2LCAwLCA3LCAxKTtcbiRibHVlOiByZ2JhKDEzLCA1MCwgNzcsIDEpO1xuJHllbGxvdzogcmdiYSgyMjIsIDE4MCwgOCwgMSk7XG4kZ3JlZW46IHJnYmEoNTIsIDYyLCA2MSwgMSk7XG4kYmxhY2tpc2g6IHJnYmEoNDcsIDQ1LCA0NiwgMSk7XG4kZGF0ZTogIzcyNzI3MjtcbiIsIlxuLnBpY2tlcl9fZGF5LS1oaWdobGlnaHRlZDpob3Zlcixcbi5waWNrZXItLWZvY3VzZWRcbi5waWNrZXJfX2RheS0taGlnaGxpZ2h0ZWQge1xuXG59XG5cbi8vZGFmYXVsdCBkYXRlIHBpY2tlclxuLnVpLWRhdGVwaWNrZXIge1xuICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4udWktZGF0ZXBpY2tlci1oZWFkZXJ7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbi51aS13aWRnZXQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShnbG9iYWwsIGdyZXktbGlnaHQpO1xuICBib3JkZXI6IDA7XG59XG5cbi51aS1zdGF0ZS1kZWZhdWx0LFxuLnVpLXdpZGdldC1jb250ZW50XG4udWktc3RhdGUtZGVmYXVsdHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShnbG9iYWwsIGdyZXktcGFsZSk7XG59XG5cblxuLnVpLXN0YXRlLWhpZ2hsaWdodHtcbiAgYm9yZGVyOiAxcHggc29saWQgJHllbGxvdyAhaW1wb3J0YW50O1xufVxuIiwiXG5cblxuI2Nib3hXcmFwcGVyICB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG4iLCIuZmllbGQtLW5hbWUtdXNlci1waWN0dXJlIHtcbiAgaW1nIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgLy8gcGFkZGluZzogLjJyZW07XG4gIH1cbn1cbiIsImgyLnN0eWxlZ3VpZGUge1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcGFsZXR0ZShncmVlbiwgZGFyayk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xufVxuIiwiLmNvbnRleHR1YWwtbGlua3Mtd3JhcHBlciB7XG5cbiAgYS5jb250ZXh0dWFsLWxpbmtzLXRyaWdnZXJ7XG4gICAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cblxuICB1bC5jb250ZXh0dWFsLWxpbmtzIGxpIGEge1xuICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB9XG59XG4iLCJuYXYudGFicyB7XG4gIG1hcmdpbi10b3A6IC41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBAZXh0ZW5kICVjZjtcblxuICBsaSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG5cbiAgICBhIHtcbiAgICAgIGJvdHRvbS1ib3R0b206IDAgIWltcG9ydGFudDtcbiAgICAgIGNvbG9yOiBwYWxldHRlKHRhYnMsIGFjdGl2ZSk7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogLjZyZW07XG4gICAgICBwYWRkaW5nOiAuMnJlbSAuNmVtO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgICAgYm9yZGVyOiAycHggc29saWQgcGFsZXR0ZSh0YWJzLCBiZyk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUodGFicywgYmcpO1xuICAgICAgICBib3R0b20tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBsaSB7XG4gICAgJi5pcy1hY3RpdmUgYSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKHRhYnMsIGJnKTtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG4gIH1cblxuICB1bC50YWJzLnByaW1hcnkge1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUodGFicywgYmcpO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgIEBpbmNsdWRlIG1hcHB5LWJwKHRhYmxldC1wb3J0cmFpdCkge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgLy8gcGFkZGluZy1yaWdodDogMXJlbTtcbiAgICB9O1xuICB9XG5cbiAgdWwudGFicy5zZWNvbmRhcnkge1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUodGFicywgYmcpO1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgICBtYXJnaW4tdG9wOiAuNXJlbTtcbiAgICBAaW5jbHVkZSBtYXBweS1icCh0YWJsZXQtcG9ydHJhaXQpIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIC8vIHBhZGRpbmctcmlnaHQ6IDFyZW07XG4gICAgfTtcblxuICAgIGEge1xuICAgICAgZm9udC1zaXplOiAuNnJlbTtcbiAgICAgIHBhZGRpbmc6IC4xcmVtIC40O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcblxuICAgIH1cbiAgfVxufVxuIiwiLy8gTWFwcHkgYnJlYWtwb2ludHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tXG4vLyBPdXRwdXQgbWVkaWEgcXVlcnkgd2l0aCBmb2N1cyBvbiBtaW4td2lkdGgsIG1heC13aWR0aCwgbWluLWhlaWdodCBhbmQgbWF4LWhlaWdodC5cbi8vIE90aGVyIG1lZGlhIHJ1bGVzIGFyZSBwYXNzZWQgYXMgdGhlIHNlY29uZCBhcmd1bWVudCBpbiBhIG1hcFxuLy9cbi8vIEBhdXRob3IgWmVsbCBMaWV3XG4vLyA9PT09PT09PT09PT09PT09PVxuJGJyZWFrcG9pbnRzOiAoKSAhZGVmYXVsdDtcbiRtYXBweS1xdWVyaWVzOiAoKSAhZGVmYXVsdDtcblxuLy8gTWFwcHkgQlAgW01peGluXVxuLy8gLS0tLS0tLS0tLS0tLS0tLVxuLy8gLSAkcXVlcmllcyAgICAgICAgIDogPHN0cmluZz4gb3IgPG51bWJlcj4gaW4gdGhlIGZvcm1hdDpcbi8vICAgICAgICAgICAgICAgICAgICAgIDxtaW4td2lkdGg+IDxtYXgtd2lkdGg+IGggPG1pbi1oZWlnaHQ+IDxtYXgtaGVpZ2h0PiA8a2V5PiA8dmFsdWU+XG4vLyAtICR0eXBlICAgICAgICAgICAgOiA8bWVkaWEtdHlwZT5cbi8vIC0gJHF1ZXJ5LWZhbGxiYWNrICA6IDxzdHJpbmc+IHNlbGVjdG9yIGNsYXNzXG4vLyAtICRicmVha3BvaW50cyAgICAgOiA8bWFwPlxuQG1peGluIG1hcHB5LWJwKCRxdWVyaWVzLCAkdHlwZTogYWxsLCAkcXVlcnktZmFsbGJhY2s6IG51bGwsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG5cbiAgLy8gR2V0cyBtYXBweSBtYXAgdGhyb3VnaCBtYXBweS1icCBmblxuICAkbWFwcHktbWFwOiBtYXBweS1icCgkcXVlcmllcywgJHR5cGUsICRxdWVyeS1mYWxsYmFjaywgJGJyZWFrcG9pbnRzKTtcblxuICAvLyBPdXRwdXRzIG1lZGlhIHN0cmluZ1xuICBAbWVkaWEgI3ttYXAtZ2V0KCRtYXBweS1tYXAsIHR5cGUpfSBhbmQgI3ttYXAtZ2V0KCRtYXBweS1tYXAsIG1lZGlhLXN0cmluZyl9IHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gIC8vIElmIGEgcXVlcnkgZmFsbGJhY2sgaXMgcHJvdmlkZWRcbiAgQGlmICRxdWVyeS1mYWxsYmFjayB7XG4gICAgI3skcXVlcnktZmFsbGJhY2t9ICYge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1hcHB5IFF1ZXJ5IFtNaXhpbl1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIE91dHB1dCBxdWVyeSBmcm9tICRtYXBweS1xdWVyaWVzIG1hcC5cbi8vICRxdWVyeSA6IDxzdHJpbmc+IGZyb20gJG1hcHB5LXF1ZXJpZXMga2V5XG5AbWl4aW4gbWFwcHktcXVlcnkoJHF1ZXJ5LCAkbWFwcHktcXVlcmllczogJG1hcHB5LXF1ZXJpZXMpIHtcbiAgQGlmIG5vdCBtYXAtaGFzLWtleSgkbWFwcHktcXVlcmllcywgJHF1ZXJ5KSB7XG4gICAgQGVycm9yIFwiI3skbWFwcHktcXVlcmllc30gZG9lcyBub3QgY29udGFpbiAjeyRxdWVyeX1cIjtcbiAgfVxuXG4gICRtYXBweS1tYXA6IG1hcC1nZXQoJG1hcHB5LXF1ZXJpZXMsICRxdWVyeSk7XG5cbiAgQG1lZGlhICN7bWFwLWdldCgkbWFwcHktbWFwLCB0eXBlKX0gYW5kICN7bWFwLWdldCgkbWFwcHktbWFwLCBtZWRpYS1zdHJpbmcpfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICAvLyBJZiBhIHF1ZXJ5IGZhbGxiYWNrIGlzIHByb3ZpZGVkXG4gIEBpZiBtYXAtZ2V0KCRtYXBweS1tYXAsIHF1ZXJ5LWZhbGxiYWNrKSB7XG4gICAgI3ttYXAtZ2V0KCRtYXBweS1tYXAsIHF1ZXJ5LWZhbGxiYWNrKX0gJiB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8gTWFwcHkgQlAgW0Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJucyBhIG1hcCB3aXRoIDMga2V5c1xuLy8gLSB0eXBlICAgICAgICAgICA6IE1lZGlhIHR5cGVcbi8vIC0gbWVkaWEtc3RyaW5nICAgOiBtZWRpYSBxdWVyeSBzdHJpbmdcbi8vIC0gcXVlcnktZmFsbGJhY2sgOiBxdWVyeSBmYWxsYmFjayAoaWYgYW55KVxuQGZ1bmN0aW9uIG1hcHB5LWJwKCRxdWVyaWVzLCAkdHlwZTogYWxsLCAkcXVlcnktZmFsbGJhY2s6IG51bGwsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG4gICRtZWRpYS1zdHJpbmc6ICgpO1xuICAkX3JldHVybjogKCk7XG4gICRtZWRpYS1tYXA6IHBhcnNlLWJwKCRxdWVyaWVzLCAkYnJlYWtwb2ludHMpO1xuXG4gIEBlYWNoICRrZXksICR2YWx1ZSBpbiAkbWVkaWEtbWFwIHtcbiAgICBAaWYgJHZhbHVlIGFuZCAkdmFsdWUgIT0gMCB7XG4gICAgICBAaWYgJG1lZGlhLXN0cmluZyA9PSAoKCkpIHtcbiAgICAgICAgJG1lZGlhLXN0cmluZzogYXBwZW5kKCRtZWRpYS1zdHJpbmcsIHVucXVvdGUoXCIoI3ska2V5fTogI3skdmFsdWV9KVwiKSk7XG4gICAgICB9XG5cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJG1lZGlhLXN0cmluZzogYXBwZW5kKCRtZWRpYS1zdHJpbmcsIHVucXVvdGUoXCJhbmQgKCN7JGtleX06ICN7JHZhbHVlfSlcIikpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAkX3JldHVybjogKFxuICAgIHR5cGU6ICR0eXBlLFxuICAgIG1lZGlhLXN0cmluZzogaW1wbG9kZSgkbWVkaWEtc3RyaW5nKSxcbiAgICBxdWVyeS1mYWxsYmFjazogJHF1ZXJ5LWZhbGxiYWNrXG4gICk7XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cblxuLy8gQlAgW01peGluXVxuLy8gLS0tLS0tLS0tLVxuLy8gQ29udmVuaWVuY2UgbWl4aW4gZm9yIE1hcHB5IEJyZWFrcG9pbnRzXG5AbWl4aW4gYnAoJHF1ZXJpZXMsICR0eXBlOiBhbGwsICRxdWVyeS1mYWxsYmFjazogbnVsbCwgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHMpIHtcbiAgQGluY2x1ZGUgbWFwcHktYnAoJHF1ZXJpZXMsICR0eXBlLCAkcXVlcnktZmFsbGJhY2ssICRicmVha3BvaW50cykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIFBhcnNlIEJQIFtmdW5jdGlvbl1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFBhcnNlcyBhcmd1bWVudHMgYW5kIHJldHVybnMgYSBtYXAgd2l0aCA0IGtleXNcbkBmdW5jdGlvbiBwYXJzZS1icCgkcXVlcmllcywgJGJyZWFrcG9pbnRzKSB7XG4gICRfcmV0dXJuOiAoKTtcbiAgJF9pOiAxO1xuICAkX21pbnc6IG51bGw7XG4gICRfbWF4dzogbnVsbDtcbiAgJF9taW5oOiBudWxsO1xuICAkX21heGg6IG51bGw7XG4gICRfbGVuZ3RoOiBsZW5ndGgoJHF1ZXJpZXMpO1xuXG4gIC8vIENoZWNrcyBmb3Igd2lkdGggcXVlcmllc1xuICAkX21pbnc6IG50aCgkcXVlcmllcywgMSk7XG4gICRfbWludzogbWFwcHktdmFsaWRhdGUoJF9taW53LCAkYnJlYWtwb2ludHMpO1xuXG4gIC8vIENoZWNrIGZvciB3aWR0aCBxdWVyaWVzXG4gIEBpZiAkX21pbncge1xuICAgICRfbWludzogbWFwcHktY29udmVydC10by1lbSgkX21pbncpO1xuICAgICRfcmV0dXJuOiBtYXAtbWVyZ2UoJF9yZXR1cm4sIChtaW4td2lkdGg6ICRfbWludykpO1xuICAgICRxdWVyaWVzOiBzZXQtbnRoKCRxdWVyaWVzLCAxLCBudWxsKTtcbiAgfVxuXG4gIC8vIENoZWNrcyBpZiB0aGVyZSBpcyBhIG1heCB3aWR0aCBxdWVyeVxuICBAaWYgJF9taW53IGFuZCAkX2xlbmd0aCA+PSAyIHtcbiAgICAkX21heHc6IG50aCgkcXVlcmllcywgMik7XG4gICAgJF9tYXh3OiBtYXBweS12YWxpZGF0ZSgkX21heHcsICRicmVha3BvaW50cyk7XG4gIH1cblxuICBAaWYgJF9tYXh3IHtcbiAgICAkX21heHc6IG1hcHB5LWNvbnZlcnQtdG8tZW0oJF9tYXh3IC0gMXB4KTtcbiAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAobWF4LXdpZHRoOiAkX21heHcpKTtcbiAgICAkcXVlcmllczogc2V0LW50aCgkcXVlcmllcywgMiwgbnVsbCk7XG4gIH1cblxuICAvLyBDaGVja3MgZm9yIGhlaWdodCBxdWVyaWVzXG4gICRfaDogaW5kZXgoJHF1ZXJpZXMsIGgpIG9yIGluZGV4KCRxdWVyaWVzLCBoZWlnaHQpO1xuXG4gIEBpZiAkX2gge1xuICAgICRfbWluaDogbnRoKCRxdWVyaWVzLCAkX2ggKyAxKTtcbiAgICAkX21pbmg6IG1hcHB5LXZhbGlkYXRlKCRfbWluaCwgJGJyZWFrcG9pbnRzKTtcblxuICAgIEBpZiAkX21pbmgge1xuICAgICAgJF9taW5oOiBtYXBweS1jb252ZXJ0LXRvLWVtKCRfbWluaCk7XG4gICAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAobWluLWhlaWdodDogJF9taW5oKSk7XG4gICAgICAkcXVlcmllczogc2V0LW50aCgkcXVlcmllcywgJF9oICsgMSwgbnVsbCk7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2tzIGlmIHRoZXJlIGlzIGEgbWF4IGhlaWdodCBxdWVyeVxuICAgIEBpZiAkX2xlbmd0aCAtICRfaCA+PSAyIHtcbiAgICAgICRfbWF4aDogbnRoKCRxdWVyaWVzLCAkX2ggKyAyKTtcbiAgICAgICRfbWF4aDogbWFwcHktdmFsaWRhdGUoJF9tYXhoLCAkYnJlYWtwb2ludHMpO1xuICAgIH1cblxuICAgIEBpZiAkX21heGgge1xuICAgICAgJF9tYXhoOiBtYXBweS1jb252ZXJ0LXRvLWVtKCRfbWF4aCAtIDFweCk7XG4gICAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAobWF4LWhlaWdodDogJF9tYXhoKSk7XG4gICAgICAkcXVlcmllczogc2V0LW50aCgkcXVlcmllcywgJF9oICsgMiwgbnVsbCk7XG4gICAgfVxuICAgIC8vIFJlc2V0IGggbWFya2VyXG4gICAgJHF1ZXJpZXM6IHNldC1udGgoJHF1ZXJpZXMsICRfaCwgbnVsbCk7XG4gIH1cblxuICAvLyBDaGVja3MgZm9yIG90aGVyIHF1ZXJpZXNcbiAgQHdoaWxlICRfaSA8PSBsZW5ndGgoJHF1ZXJpZXMpIHtcbiAgICAkX2tleTogbnRoKCRxdWVyaWVzLCAkX2kpO1xuXG4gICAgQGlmICRfa2V5IGFuZCAkX2xlbmd0aCAtICRfaSA+PSAxIHtcbiAgICAgICRfdmFsOiBudGgoJHF1ZXJpZXMsICRfaSArIDEpO1xuICAgICAgJF9yZXR1cm46IG1hcC1tZXJnZSgkX3JldHVybiwgKCN7JF9rZXl9OiAkX3ZhbCkpO1xuICAgICAgJHF1ZXJpZXM6IHNldC1udGgoJHF1ZXJpZXMsICRfaSwgbnVsbCk7XG4gICAgICAkcXVlcmllczogc2V0LW50aCgkcXVlcmllcywgJF9pICsgMSwgbnVsbCk7XG4gICAgfVxuXG4gICAgQGVsc2UgaWYgJF9rZXkge1xuICAgICAgQHdhcm4gdW5xdW90ZSgnXCJNYXBweSBCcmVha3BvaW50cyBpcyBtaXNzaW5nIHZhbHVlIGZvciBtZWRpYSBmZWF0dXJlIFwiI3skX2tleX1cIlwiJyk7XG4gICAgfVxuICAgICRfaTogJF9pICsgMTtcbiAgfVxuICBAcmV0dXJuICRfcmV0dXJuO1xufVxuXG4vLyBNYXBweSBWYWxpZGF0ZSBbRnVuY3Rpb25dXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDaGVja3MgaWYgJHF1ZXJ5IGdpdmVuIGlzIG9uZSBvZiB0aGUgZm9sbG93aW5nOlxuLy8gMSkgSXMgYSAka2V5IGluIHRoZSAkYnJlYWtwb2ludHMgbWFwXG4vLyAyKSBJcyBhIG51bWJlclxuLy8gMykgSXMgYSBcIm1heFwiLCBcIm1heC13aWR0aFwiIG9yIFwibWF4LWhlaWdodFwiIHN0cmluZ1xuQGZ1bmN0aW9uIG1hcHB5LXZhbGlkYXRlKCRxdWVyeSwgJGJyZWFrcG9pbnRzKSB7XG4gICRfcmV0dXJuOiBudWxsO1xuXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRxdWVyeSkge1xuICAgICRfcmV0dXJuOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHF1ZXJ5KTtcbiAgfVxuXG4gIEBlbHNlIGlmIHR5cGUtb2YoJHF1ZXJ5KSA9PSBudW1iZXIge1xuICAgICRfcmV0dXJuOiAkcXVlcnk7XG4gIH1cblxuICBAZWxzZSBpZiAkcXVlcnkgPT0gXCJtYXhcIiBvciAkcXVlcnkgPT0gXCJtYXgtaGVpZ2h0XCIgb3IgJHF1ZXJ5ID09IFwibWF4LXdpZHRoXCIge1xuICAgICRfcmV0dXJuOiAwO1xuICB9XG5cbiAgQGVsc2Uge1xuICAgICRfcmV0dXJuOiBudWxsO1xuICB9XG4gIEByZXR1cm4gJF9yZXR1cm47XG59XG5cbi8vIE1hcHB5IENvbnZlcnQgVG8gRW0gW0Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ2hlY2tzIGFuZCBjb252ZXJ0cyBweCB2YWx1ZXMgdG8gZW0uIExlYXZlIG90aGVyIHVuaXRzIHVudG91Y2hlZC5cblxuQGZ1bmN0aW9uIG1hcHB5LWNvbnZlcnQtdG8tZW0oJHZhbCkge1xuICBAaWYgdW5pdCgkdmFsKSA9PSBcInB4XCIgb3IgJHZhbCA9PSAwIHtcbiAgICBAcmV0dXJuIG1hcHB5LWVtKCR2YWwpO1xuICB9IEBlbHNlIGlmIHVuaXQoJHZhbCkgPT0gXCJlbVwiIHtcbiAgICBAcmV0dXJuICR2YWw7XG4gIH0gQGVsc2UgaWYgdW5pdCgkdmFsKSA9PSBcInJlbVwiIHtcbiAgICBAcmV0dXJuIG1hcHB5LXN0cmlwLXVuaXQoJHZhbCkgKiAxZW07XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciB1bnF1b3RlKFwiQnJlYWtwb2ludCB2YWx1ZSBtdXN0IGhhdmUgYSB1bml0IGlmIGl0J3MgYSBudW1iZXJcIik7XG4gIH1cbn1cblxuLy8gTWFwcHkgRW0gW0Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENvbnZlcnRzIHBpeGVscyB0byBlbSB3aXRoICRiYXNlLWZvbnQtc2l6ZVxuLy8gLSBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9pankvMTQ0MTk2N1xuQGZ1bmN0aW9uIG1hcHB5LWVtKCR0YXJnZXQsICRjb250ZXh0OiAxNnB4KSB7XG4gIEBpZiAkdGFyZ2V0ID09IDAge1xuICAgIEByZXR1cm4gMDtcbiAgfVxuICBAcmV0dXJuICR0YXJnZXQgLyAkY29udGV4dCAqIDFlbTtcbn1cblxuQGZ1bmN0aW9uIG1hcHB5LXN0cmlwLXVuaXQoJG51bSkge1xuICBAcmV0dXJuICRudW0gLyAoJG51bSAqIDAgKyAxKTtcbn1cblxuLy8gSW1wbG9kZSBbRnVuY3Rpb25dXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSW1wbG9kZSBhIGxpc3QgaW50byBhIHN0cmluZ1xuQGZ1bmN0aW9uIGltcGxvZGUoJGxpc3QsICRnbHVlOiAnICcpIHtcbiAgJHJlczogbnVsbDtcbiAgJGxlbjogbGVuZ3RoKCRsaXN0KTtcblxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRsZW4ge1xuICAgICRlOiBudGgoJGxpc3QsICRpKTtcbiAgICBAaWYgJGkgPT0gJGxlbiB7XG4gICAgICAkcmVzOiB1bnF1b3RlKFwiI3skcmVzfSN7JGV9XCIpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAkcmVzOiB1bnF1b3RlKFwiI3skcmVzfSN7JGV9I3skZ2x1ZX1cIik7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkcmVzO1xufVxuIiwiLmZpbGUtLWdlbmVyYWwsXG4uZmlsZS0tYXBwbGljYXRpb24tb2N0ZXQtc3RyZWFtIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWV4ZS5zdmcpO1xufVxuLmZpbGUtLXBhY2thZ2UteC1nZW5lcmljIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWdlbmVyaWMuc3ZnKTtcbn1cbi5maWxlLS14LW9mZmljZS1zcHJlYWRzaGVldCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS14bHMuc3ZnKTtcbn1cbi5maWxlLS14LW9mZmljZS1kb2N1bWVudCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1kb2Muc3ZnKTtcbn1cbi5maWxlLS14LW9mZmljZS1wcmVzZW50YXRpb24ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2ZpbGUtcHB0LnN2Zyk7XG59XG4uZmlsZS0tdGV4dC14LXNjcmlwdCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1qcy5zdmcpO1xufVxuLmZpbGUtLXRleHQtaHRtbCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1odG1sLnN2Zyk7XG59XG4uZmlsZS0tdGV4dC1wbGFpbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvdGV4dC1wbGFpbi5wbmcpO1xufVxuLmZpbGUtLWFwcGxpY2F0aW9uLXBkZiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1wZGYuc3ZnKTtcblxufVxuLmZpbGUtLWFwcGxpY2F0aW9uLXgtZXhlY3V0YWJsZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1leGUuc3ZnKTtcbn1cbi5maWxlLS1hdWRpbyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS1tcDMuc3ZnKTtcblxufVxuLmZpbGUtLXZpZGVvIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLW1wNC5zdmcpO1xuXG59XG4uZmlsZS0tdGV4dCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvZmlsZS10eHQuc3ZnKTtcblxufVxuLmZpbGUtLWltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWpwZy5zdmcpO1xufVxuXG4uZmlsZS0tbWltZS1hcHBsaWNhdGlvbi1wb3N0c2NyaXB0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9maWxlLWVwcy5zdmcpO1xufVxuXG4uZmlsZXtcbiAgYmFja2dyb3VuZC1zaXplOiAxNnB4IGF1dG87XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgdG9wO1xufVxuXG5hW2RhdGEtZW50aXR5LXR5cGU9XCJmaWxlXCJde1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xuXG4gICY6YmVmb3Jle1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjb250ZW50OiAnICc7XG4gICAgd2lkdGg6IC43NXJlbTtcbiAgICBoZWlnaHQ6IDFyZW07XG4gICAgbGVmdDogLS45cmVtO1xuICAgIHRvcDogLjEycmVtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvaWNvbnMvYXR0YWNoLTIuc3ZnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMXJlbSAxcmVtO1xuICB9XG5cbn1cbiJdfQ== */
